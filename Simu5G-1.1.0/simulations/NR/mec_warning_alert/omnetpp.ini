[General]
image-path=../../../images
tkenv-plugin-path = ../../../../inet/etc/plugins
cmdenv-express-mode = true
cmdenv-autoflush = true
result-dir = 3car

##########################################################
#            Output Format Results                       #
##########################################################

repeat = 1
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false
**.scalar-recording = true
**.vector-recording = false
**.routingRecorder.enabled = false


##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 30s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.targetBler = 0.01
**.blerShift = 5  

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = ${numBands=25}

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0
*.car[*].cellularNic.numCarriers = 1
*.car[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

*.car[*].mobility.initFromDisplayString = false
*.car[*].mobilityType = "LinearMobility"
*.car[*].mobility.updateInterval = 0.05s

*.gNodeB1.mobility.initFromDisplayString = true

**.numCars = 3
**.car[0].mobility.initialX = 180m
**.car[0].mobility.initialY = 50m
**.car[0].mobility.initialMovementHeading = 90deg
**.car[0].mobility.speed = 10mps

**.car[1].mobility.initialX = 180m
**.car[1].mobility.initialY = 100m
**.car[1].mobility.initialMovementHeading = 90deg
**.car[1].mobility.speed = 10mps

**.car[2].mobility.initialX = 180m
**.car[2].mobility.initialY = 150m
**.car[2].mobility.initialMovementHeading = 90deg
**.car[2].mobility.speed = 10mps

**.car[*].masterId = 1    
**.car[*].macCellId = 1   
**.car[*].nrMasterId = 1
**.car[*].nrMacCellId = 1
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################

#------------UEWarningAlertApp---------------
*.car[*].numApps = 1
*.car[*].app[0].typename = "UEWarningAlertApp"
*.car[*].app[0].startTime = 0s										#when sending start warning alert app
*.car[*].app[0].period = 0.1s										#period to sending messages
*.car[*].app[0].stopTime = 25s										#when sending stop MEC warning alert app
*.car[*].app[0].destAddress = "meHost.virtualisationInfrastructure"
*.car[*].app[0].requiredRam = 10MB
*.car[*].app[0].requiredDisk = 10MB
*.car[*].app[0].requiredCpu = 0.01
#----------------------------------------

######################_ME Host Side_#####################
# resources available
*.meHost.maxMEApps = 100												#max ME Apps to instantiate
*.meHost.maxRam = 32GB													#max KBytes of Ram Space 
*.meHost.maxDisk = 100TB												#max KBytes of Ram Space 
*.meHost.maxCpu = 1														#max percentage of CPU
#----------------------------------------


#-------MEWarningAlertService:---------------
*.meHost.mePlatform.numServices = 1
*.meHost.mePlatform.udpService[0].typename = "MEWarningAlertService"
# to correctly display the Danger area insert Edges in the order they are crossed by lines
# edge A
*.meHost.mePlatform.udpService[0].dangerEdgeAx = 160m
*.meHost.mePlatform.udpService[0].dangerEdgeAy = 180m
*.meHost.mePlatform.udpService[0].dangerEdgeAz = 0m
# edge B
*.meHost.mePlatform.udpService[0].dangerEdgeBx = 240m
*.meHost.mePlatform.udpService[0].dangerEdgeBy = 200m
*.meHost.mePlatform.udpService[0].dangerEdgeBz = 0m
# edge C
*.meHost.mePlatform.udpService[0].dangerEdgeCx = 210m
*.meHost.mePlatform.udpService[0].dangerEdgeCy = 320m
*.meHost.mePlatform.udpService[0].dangerEdgeCz = 0m
# edge D
*.meHost.mePlatform.udpService[0].dangerEdgeDx = 150m
*.meHost.mePlatform.udpService[0].dangerEdgeDy = 350m
*.meHost.mePlatform.udpService[0].dangerEdgeDz = 0m
#----------------------------------------
#
# ME Host connected
**.gNodeB*.meHost = "meHost"
# ----------------------------------------------------------------------------- #


# ----------------------------------------------------------------------------- #
# Config "Test"
#
[Config Test]
network = simu5g.simulations.NR.mec_warning_alert.MecSingleCell
#