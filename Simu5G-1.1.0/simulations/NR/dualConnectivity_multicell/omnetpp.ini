[General]
image-path=../../../images
tkenv-plugin-path = ../../../../inet/etc/plugins
output-scalar-file-append = false
sim-time-limit=30s
debug-on-errors = false
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
**.vector-recording = true
################ Mobility parameters #####################
# *

**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Number of Resource Blocks ################
**.numBands = 50 

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

**.fading = false
**.shadowing = false
**.enableHandover = true
**.targetBler = 0.01
**.blerShift = 5  

#------------------------------------#
# Config DualConnectivity
#
# Topology configuration for the exemplary scenario for Dual Connectivity
#
[Config DualConnectivity]
network = simu5g.simulations.NR.networks.MultiCell_withSecondaryGnb

############### e/gNodeB configuration #################
*.masterEnb1.mobility.initialX = 300m
*.masterEnb1.mobility.initialY = 300m
*.secondaryGnb1.mobility.initialX = 500m
*.secondaryGnb1.mobility.initialY = 400m

*.masterEnb2.mobility.initialX = 700m
*.masterEnb2.mobility.initialY = 300m
*.secondaryGnb2.mobility.initialX = 800m
*.secondaryGnb2.mobility.initialY = 400m

# the LTE eNodeB must instantiate the NR PDCP layer to exploit Dual Connectivity
# the NR gNodeB comes with NR PDCP layer by default
*.masterEnb*.nicType = "LteNicEnbD2D"
*.masterEnb*.cellularNic.LtePdcpRrcType = "NRPdcpRrcEnb"
*.secondaryGnb1.masterId = 1
*.secondaryGnb2.masterId = 3
**.dualConnectivityEnabled = true

# PHY layer configuration
**.downlink_interference = true
*.masterEnb*.cellularNic.phy.eNodeBTxPower = 40
*.secondaryGnb*.cellularNic.phy.eNodeBTxPower = 20
**.minRssi = 1dB

############### X2 configuration #################
*.masterEnb*.numX2Apps = 2    # one x2App per peering node
*.secondaryGnb*.numX2Apps = 1    # one x2App per peering node
*.*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

# Dual connectivity connections
*.masterEnb1.x2App[0].client.connectAddress = "secondaryGnb1%x2ppp0" 
*.masterEnb2.x2App[0].client.connectAddress = "secondaryGnb2%x2ppp0" 
*.secondaryGnb1.x2App[0].client.connectAddress = "masterEnb1%x2ppp0" 
*.secondaryGnb2.x2App[0].client.connectAddress = "masterEnb2%x2ppp0" 

# inter-master nodes connections
*.masterEnb1.x2App[1].client.connectAddress = "masterEnb2%x2ppp1" 
*.masterEnb2.x2App[1].client.connectAddress = "masterEnb1%x2ppp1" 

############## UE configuration ##################
*.numUe = 1

# connect the UE's NIC to the corresponding serving eNB
# initially, the UE is served by the first cell
*.ue[0].macCellId = 1
*.ue[0].masterId = 1
*.ue[0].nrMacCellId = 2
*.ue[0].nrMasterId = 2

# UE position
*.ue[0].mobilityType = "LinearMobility"
*.ue[0].mobility.initialX = 500m
*.ue[0].mobility.initialY = 350m
*.ue[0].mobility.speed = 13.9mps  # 50 Km/h
*.ue[0].mobility.initialMovementHeading = 0deg

#------------------------------------#


#------------------------------------#
# Config CBR-DL
#
# General configuration for Constant Bit Rate DL traffic to the UE
# 
[Config CBR-DL]

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 1

#============= Application Setup =============
*.ue[*].app[*].typename = "CbrReceiver"
*.ue[*].app[*].localPort = 3000+ancestorIndex(0)

*.server.app[*].typename = "CbrSender"
*.server.app[*].destAddress = "ue[0]" # obtain the address of the client by reading its index in the array of udp Apps
*.server.app[*].localPort = 3088+ancestorIndex(0) 
*.server.app[*].destPort = 3000+ancestorIndex(0)
*.server.app[*].sampling_time = 0.05s
*.server.app[*].startTime = uniform(0.02s, 0.05s)
#------------------------------------#


#------------------------------------#
# Config VoIP-UL
#
# General configuration for Voice-over-IP UL traffic from the UE
# 
[Config CBR-UL]

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 1

#============= Application Setup =============
*.server.app[*].typename = "CbrReceiver"
*.server.app[*].localPort = 1000+ancestorIndex(0)

*.ue[*].app[*].typename = "CbrSender"
*.ue[*].app[*].destAddress = "server" 
*.ue[*].app[*].sampling_time = 0.05s
*.ue[*].app[*].localPort = 3088+ancestorIndex(0)
*.ue[*].app[*].destPort = 1000+ancestorIndex(0)
*.ue[*].app[*].startTime = uniform(0.02s, 0.05s)
#------------------------------------#



###########################
# Runnable configurations #
###########################

# In the current version, the Ip2Nic module of the master eNB (the UE) selects which path
# to follow based on the Type of Service (TOS) field:
# - use master eNB if tos < 10
# - use secondary gNB if 10 <= tos < 20
# - use split bearer if tos >= 20
#
# To change the policy, change the implementation of the Ip2Nic::markPacket() function 

#------------------------------------#
[Config SingleConnection-DL]
extends=DualConnectivity, CBR-DL
*.server.app[*].tos = 10
#------------------------------------#

#------------------------------------#
[Config SingleConnection-UL]
extends=DualConnectivity, CBR-UL
*.ue[*].app[*].tos = 10
#------------------------------------#

#------------------------------------#
# In this configuration, one UE has TWO independent DL connections, one
# going through the LTE eNodeB, the other one through the gNodeB
[Config DoubleConnection-DL]
extends=DualConnectivity, CBR-DL
# one UDP application for each user
*.ue[*].numApps = 2
# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 2
*.server.app[0].tos = -1
*.server.app[1].tos = 10
#------------------------------------#

#------------------------------------#
# In this configuration, one UE has TWO independent UL connections, one
# going through the LTE eNodeB, the other one through the gNodeB
[Config DoubleConnection-UL]
extends=DualConnectivity, CBR-UL
# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 2
# one UDP application for each user
*.ue[*].numApps = 2
*.ue[*].app[0].tos = -1
*.ue[*].app[1].tos = 10
#------------------------------------#


#------------------------------------#
# In this configuration, one UE has one DL connection, exploiting Split Bearer feature
[Config SplitBearer-DL]
extends=DualConnectivity, CBR-DL
*.server.app[*].tos = 20
#------------------------------------#
