%description:
Check that $MODULE_NAME etc parameters are properly recognised in the
path expression: xmldoc("filename.xml", "pathexpr")

$MODULE_FULLPATH, $MODULE_FULLNAME, $MODULE_NAME, $MODULE_INDEX, $MODULE_ID
$PARENTMODULE_FULLPATH, ...
$GRANDPARENTMODULE_FULLPATH,...

%file: test.xml

<foo>
    <foo id="fp" att="Net.subnet[0].simp[0]"/>
    <foo id="fn" att="simp[0]"/>
    <foo id="n"  att="simp"/>
    <foo id="i"  att="0"/>
    <foo id="id" att="6"/>

    <pfoo id="p_fp" att="Net.subnet[0]"/>
    <pfoo id="p_fn" att="subnet[0]"/>
    <pfoo id="p_n"  att="subnet"/>
    <pfoo id="p_i"  att="0"/>
    <pfoo id="p_id" att="2"/>

    <gpfoo id="gp_fp/fn/n" att="Net"/>
    <gpfoo id="gp_i"  att="0"/>
    <gpfoo id="gp_id" att="1"/>
</foo>

%global:

#ifdef _MSC_VER
#pragma warning(disable:4786)
#endif


%file: test.ned

module Dummy
{
}

simple Simple
{
    parameters:
        xml by_module_fullpath;
        xml by_module_fullname;
        xml by_module_name;
        xml by_module_index;
        xml by_module_id;

        xml by_parentmodule_fullpath;
        xml by_parentmodule_fullname;
        xml by_parentmodule_name;
        xml by_parentmodule_index;
        xml by_parentmodule_id;

        xml by_grandparentmodule_fullpath;
        xml by_grandparentmodule_fullname;
        xml by_grandparentmodule_name;
        xml by_grandparentmodule_index;
        xml by_grandparentmodule_id;
}

module Subnet
{
    submodules:
        dum1: Dummy;
        dum2[2]: Dummy;
        simp[1]: Simple;
        dum3: Dummy;
}

network Net
{
    submodules:
        subnet[1]: Subnet;
}

%file: test.cc

#include <string.h>
#include <omnetpp.h>

using namespace omnetpp;

namespace @TESTNAME@ {

class Simple : public cSimpleModule
{
  public:
    Simple() : cSimpleModule(16384) { }
    virtual void activity() override;
};

Define_Module(Simple);

void Simple::activity()
{
    for (int i=0; i<getNumParams(); i++)
    {
        cXMLElement *node = par(i).xmlValue();
        EV << par(i).getName() << ": <" << node->getTagName() << " id='"<< node->getAttribute("id") << "'>" << endl;
    }
}

}; //namespace

%inifile: test.ini
[General]
network = Net
cmdenv-express-mode = false

**.by_module_fullpath = xmldoc("test.xml","//foo[@att=$MODULE_FULLPATH]")
**.by_module_fullname = xmldoc("test.xml","//foo[@att=$MODULE_FULLNAME]")
**.by_module_name =     xmldoc("test.xml","//foo[@att=$MODULE_NAME]")
**.by_module_index =    xmldoc("test.xml","//foo[@att=$MODULE_INDEX]")
**.by_module_id =       xmldoc("test.xml","//foo[@att=$MODULE_ID]")

**.by_parentmodule_fullpath = xmldoc("test.xml","//pfoo[@att=$PARENTMODULE_FULLPATH]")
**.by_parentmodule_fullname = xmldoc("test.xml","//pfoo[@att=$PARENTMODULE_FULLNAME]")
**.by_parentmodule_name =     xmldoc("test.xml","//pfoo[@att=$PARENTMODULE_NAME]")
**.by_parentmodule_index =    xmldoc("test.xml","//pfoo[@att=$PARENTMODULE_INDEX]")
**.by_parentmodule_id =       xmldoc("test.xml","//pfoo[@att=$PARENTMODULE_ID]")

**.by_grandparentmodule_fullpath = xmldoc("test.xml","//gpfoo[@att=$GRANDPARENTMODULE_FULLPATH]")
**.by_grandparentmodule_fullname = xmldoc("test.xml","//gpfoo[@att=$GRANDPARENTMODULE_FULLNAME]")
**.by_grandparentmodule_name =     xmldoc("test.xml","//gpfoo[@att=$GRANDPARENTMODULE_NAME]")
**.by_grandparentmodule_index =    xmldoc("test.xml","//gpfoo[@att=$GRANDPARENTMODULE_INDEX]")
**.by_grandparentmodule_id =       xmldoc("test.xml","//gpfoo[@att=$GRANDPARENTMODULE_ID]")

%contains-regex: stdout
by_module_fullpath: <foo id='fp'>
by_module_fullname: <foo id='fn'>
by_module_name: <foo id='n'>
by_module_index: <foo id='i'>
by_module_id: <foo id='id'>
by_parentmodule_fullpath: <pfoo id='p_fp'>
by_parentmodule_fullname: <pfoo id='p_fn'>
by_parentmodule_name: <pfoo id='p_n'>
by_parentmodule_index: <pfoo id='p_i'>
by_parentmodule_id: <pfoo id='p_id'>
by_grandparentmodule_fullpath: <gpfoo id='gp_fp/fn/n'>
by_grandparentmodule_fullname: <gpfoo id='gp_fp/fn/n'>
by_grandparentmodule_name: <gpfoo id='gp_fp/fn/n'>
by_grandparentmodule_index: <gpfoo id='gp_i'>
by_grandparentmodule_id: <gpfoo id='gp_id'>

