%description:
Test opp_typename (which is currently an internal function).

%includes:
//hmmm

class Alma {}; // in global namespace!

namespace @TESTNAME@ { class Korte {}; };

%activity:

// for debugging:
// #define PRINT(T)  {T x; printf("typeid(%s): %s | %s\n", #T, typeid(x).name(), opp_typename(typeid(x)));}

#define PRINT(T)  {T x; printf("%s = %s\n", #T, opp_typename(typeid(x)));}

PRINT(void *)
PRINT(bool)
PRINT(short)
PRINT(unsigned short)
PRINT(int)
PRINT(unsigned int)
PRINT(long)
PRINT(unsigned long)
PRINT(float)
PRINT(double)
PRINT(char)
PRINT(signed char)
PRINT(unsigned char)
PRINT(char *)
PRINT(const char *)

PRINT(int *)
PRINT(int * *)
PRINT(const int *)
PRINT(const int * *)   // this is the problematic one, usually

PRINT(Alma)
PRINT(Alma *)
PRINT(const Alma *)
PRINT(@TESTNAME@::Korte)
PRINT(@TESTNAME@::Korte *)
PRINT(const @TESTNAME@::Korte *)

%subst: /char const \*/const char */
%subst: /int const \*/const int */
%subst: /int const \* \*/const int * */
%subst: /int \* \* const/const int * */
%subst: /Alma const \*/const Alma */
%subst: /@TESTNAME@::Korte const \*/const @TESTNAME@::Korte */

%contains: stdout
void * = void *
bool = bool
short = short
unsigned short = unsigned short
int = int
unsigned int = unsigned int
long = long
unsigned long = unsigned long
float = float
double = double
char = char
signed char = signed char
unsigned char = unsigned char
char * = char *
const char * = const char *
int * = int *
int * * = int * *
const int * = const int *
const int * * = const int * *
Alma = Alma
Alma * = Alma *
const Alma * = const Alma *
opp_typename_1::Korte = opp_typename_1::Korte
opp_typename_1::Korte * = opp_typename_1::Korte *
const opp_typename_1::Korte * = const opp_typename_1::Korte *
