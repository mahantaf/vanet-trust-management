%description:

Test submodule and connection inheritance.

%file: test.ned

import testlib.Dump;

module Node
{
    gates:
        inout g1;
        inout g2;
    connections allowunconnected:
}

module Super
{
    submodules:
        a1: Node;
        a2: Node;
    connections:
        a1.g1 <--> a2.g1;
}

network Test extends Super
{
    submodules:
        b1: Node;
        b2: Node;
        dump: Dump;
    connections:
        b1.g1 <--> b2.g1;
        a1.g2 <--> b1.g2;
        b2.g2 <--> a2.g2;
}

%contains: stdout
module Test: Test {
    parameters:
        @isNetwork
    submodules:
        module Test.a1: Node {
            gates:
                g1$i: <-- a2.g1$o
                g1$o: --> a2.g1$i
                g2$i: <-- b1.g2$o
                g2$o: --> b1.g2$i
        }
        module Test.a2: Node {
            gates:
                g1$i: <-- a1.g1$o
                g1$o: --> a1.g1$i
                g2$i: <-- b2.g2$o
                g2$o: --> b2.g2$i
        }
        module Test.b1: Node {
            gates:
                g1$i: <-- b2.g1$o
                g1$o: --> b2.g1$i
                g2$i: <-- a1.g2$o
                g2$o: --> a1.g2$i
        }
        module Test.b2: Node {
            gates:
                g1$i: <-- b1.g1$o
                g1$o: --> b1.g1$i
                g2$i: <-- a2.g2$o
                g2$o: --> a2.g2$i
        }
}

