%description:
Test NED default() operator with various default values

%file: test.ned

module Foo
{
}

simple Simple
{
    parameters:
        double p1;
        double p2;
        double p3;
        double p4;
        double p5;
        double p6;
        double p7;
        double p8;
        double p9;
}

module Compound
{
    parameters:
        double a;
    gates:
        input in[];
    submodules:
        foo[5]: Foo;
        sub[3]: Simple {
            parameters:
                p1 = default(1);
                p2 = default(1+1);
                p3 = default(a);
                p4 = default(index);
                p5 = default(a+index);
                p6 = default(sizeof(in));
                p7 = default(sizeof(foo));
                p8 = default(a+sizeof(in));
                p9 = default(a+sizeof(foo));
        }
    connections allowunconnected:
}

// we need this only because the top-level module cannot
// have gates, and we want to test sizeof(gatevector) as well
network Test
{
    submodules:
        c: Compound {
            parameters:
                a = 100;
            gates:
                in[8];
        }
    connections allowunconnected:
}

%file: test.cc

#include <omnetpp.h>

using namespace omnetpp;

namespace @TESTNAME@ {

class Simple : public cSimpleModule
{
  public:
    Simple() : cSimpleModule(16384) { }
    virtual void activity() override;
};

Define_Module(Simple);

void Simple::activity()
{
    for (int i=0; i<getNumParams(); i++)
        EV << getFullName() << "." << par(i).getName() << "=" << (double)par(i) << endl;
}

}; //namespace

%inifile: test.ini
[General]
network = Test
cmdenv-express-mode = false
#Note: default params will be assigned automatically

%contains: stdout
sub[0].p1=1
sub[0].p2=2
sub[0].p3=100
sub[0].p4=0
sub[0].p5=100
sub[0].p6=8
sub[0].p7=5
sub[0].p8=108
sub[0].p9=105

%contains: stdout
sub[1].p1=1
sub[1].p2=2
sub[1].p3=100
sub[1].p4=1
sub[1].p5=101
sub[1].p6=8
sub[1].p7=5
sub[1].p8=108
sub[1].p9=105

%contains: stdout
sub[2].p1=1
sub[2].p2=2
sub[2].p3=100
sub[2].p4=2
sub[2].p5=102
sub[2].p6=8
sub[2].p7=5
sub[2].p8=108
sub[2].p9=105

