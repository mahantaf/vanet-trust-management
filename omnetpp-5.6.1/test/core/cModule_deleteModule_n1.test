%description:
Negative tests for deleteModule().

%file: test.ned

simple Tester {}

module Node {}

network Test
{
    submodules:
        node: Node;
        tester: Tester;
}

%file: test.cc

#include <string.h>
#include <omnetpp.h>

using namespace omnetpp;

namespace @TESTNAME@ {

class Tester : public cSimpleModule
{
  public:
    virtual void initialize() override;
    virtual void handleMessage(cMessage *msg) override;
};

Define_Module(Tester);

#define TRY(code) \
    EV << #code << " ---> "; \
    try { \
        code; EV << "OK\n"; \
    } catch (cException& e) { \
        EV << e.getFormattedMessage() << endl; \
    } catch (std::exception& e) { \
        EV << e.what() << endl; \
    }

void Tester::initialize()
{
    TRY(this->deleteModule();)
    scheduleAt(0, new cMessage);
}

void Tester::handleMessage(cMessage *msg)
{
    delete msg;
    TRY(getSystemModule()->deleteModule();)
    EV << "Done\n";
}

}; //namespace

%exitcode: 0

%inifile: test.ini
[General]
network = Test
cmdenv-express-mode = false
cmdenv-event-banners = false

%contains: stdout
this->deleteModule(); ---> deleteModule(): A module cannot be deleted before it has been initialized -- in module (cModule_deleteModule_n1::Tester) Test.tester (id=3), during network initialization

%contains: stdout
getSystemModule()->deleteModule(); ---> (omnetpp::cModule)Test: deleteModule(): It is not allowed to delete the system module during simulation -- in module (cModule_deleteModule_n1::Tester) Test.tester (id=3), at t=0s, event #1
Done
