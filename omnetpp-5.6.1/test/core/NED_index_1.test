%description:
Test NED index operator in:
 - submodule parameters
 - module vector sizes

%file: test.ned

module Foo
{
}

simple Simple
{
    parameters:
        double p0;
        double p1;
        double c0;
        double c1;
    gates:
        input in1[];
        input in2[];
}

module Compound
{
    parameters:
        int a;
    submodules:
        sub[3]: Simple {
            parameters:
                p0 = index;
                p1 = a+index;
                c0 = index;
                c1 = a+index;
            gates:
                in1[index];
                in2[a+index];
        }
    connections allowunconnected:
}

network Test extends Compound
{
    parameters:
        a = 100;
}

%file: test.cc

#include <omnetpp.h>

using namespace omnetpp;

namespace @TESTNAME@ {

class Simple : public cSimpleModule
{
  public:
    Simple() : cSimpleModule(16384) { }
    virtual void activity() override;
};

Define_Module(Simple);

void Simple::activity()
{
    for (int i=0; i<getNumParams(); i++)
        EV << getFullName() << "." << par(i).getName() << "=" << (double)par(i) << endl;
    EV << getFullName() << ".in1[] size=" << gateSize("in1") << endl;
    EV << getFullName() << ".in2[] size=" << gateSize("in2") << endl;
}

}; //namespace

%contains: stdout
sub[0].p0=0
sub[0].p1=100
sub[0].c0=0
sub[0].c1=100
sub[0].in1[] size=0
sub[0].in2[] size=100

%contains: stdout
sub[1].p0=1
sub[1].p1=101
sub[1].c0=1
sub[1].c1=101
sub[1].in1[] size=1
sub[1].in2[] size=101

%contains: stdout
sub[2].p0=2
sub[2].p1=102
sub[2].c0=2
sub[2].c1=102
sub[2].in1[] size=2
sub[2].in2[] size=102
