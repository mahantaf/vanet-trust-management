%description:
Test nested expression evaluation (evaluating a volatile expr inside another expr)

%file: test.ned

simple Test
{
    parameters:
        @isNetwork(true);
        volatile int rnd = 2 * intuniform(0, 5);
        string str = "foo" + string(rnd);
}

%file: test.cc

#include <omnetpp.h>

using namespace omnetpp;

namespace @TESTNAME@ {

class Test : public cSimpleModule
{
  public:
    Test() : cSimpleModule(16384) { }
    virtual void activity() override;
};

Define_Module(Test);

void Test::activity()
{
    for (int i=0; i<getNumParams(); i++) {
        EV << par(i).getName() << "=";
        par(i).isNumeric() ? EV << par(i).intValue() : EV << par(i).stringValue();
        EV << endl;
    }
    EV << ".\n";
}

}; //namespace

%contains: stdout
rnd=10
str=foo8
.
