<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>astbuilder.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>astbuilder_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <includes id="astnode_8h" name="astnode.h" local="yes" imported="no">astnode.h</includes>
    <includes id="saxparser_8h" name="saxparser.h" local="yes" imported="no">saxparser.h</includes>
    <class kind="class">omnetpp::nedxml::ASTBuilder</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>astnode.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>astnode_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::UserData</class>
    <class kind="struct">omnetpp::nedxml::SourceRegion</class>
    <class kind="class">omnetpp::nedxml::ASTNode</class>
    <class kind="class">omnetpp::nedxml::ASTNodeFactory</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="typedef">
      <type>ASTNode</type>
      <name>NedElement</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a750685cf0e2c3e1e53076dfbb9d5bb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ASTNode</type>
      <name>MsgElement</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a7cb87b71cb4fc45805549a03a5e02d21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dtdvalidationutils.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>dtdvalidationutils_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::DtdValidationUtils</class>
    <class kind="struct">omnetpp::nedxml::DtdValidationUtils::Choice</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>errorstore.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>errorstore_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::ErrorStore</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR0</name>
      <anchorfile>errorstore_8h.html</anchorfile>
      <anchor>a4c3d11a63e2590ad0e259dc59d5d2425</anchor>
      <arglist>(context, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR1</name>
      <anchorfile>errorstore_8h.html</anchorfile>
      <anchor>afaa696dffa0e17a7033a09c5a2651b4e</anchor>
      <arglist>(context, msg, arg1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR2</name>
      <anchorfile>errorstore_8h.html</anchorfile>
      <anchor>afef2247c7bfd9b9e60090107620d8c0c</anchor>
      <arglist>(context, msg, arg1, arg2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERNAL_ERROR3</name>
      <anchorfile>errorstore_8h.html</anchorfile>
      <anchor>ada383a951cc9e537c2643a1431f7c2a5</anchor>
      <arglist>(context, msg, arg1, arg2, arg3)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProblemSeverity</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEVERITY_INFO</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84ae3da86620bb8ae1659d68d01e29b4ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEVERITY_WARNING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84a2830c97bf1f5c7b39f2bca5751c562cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEVERITY_ERROR</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84acdc9ccff92ea01240849b934330ae4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NedInternalError</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ade15b0fbad07aa2fc50d93260351ca16</anchor>
      <arglist>(const char *file, int line, ASTNode *context, const char *messagefmt,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exception.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>exception_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::NedException</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>index.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>index_8h</filename>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>msganalyzer.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msganalyzer_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <includes id="msgtypetable_8h" name="msgtypetable.h" local="yes" imported="no">msgtypetable.h</includes>
    <class kind="class">omnetpp::nedxml::MsgAnalyzer</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>msgcodegenerator.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msgcodegenerator_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <includes id="msgtypetable_8h" name="msgtypetable.h" local="yes" imported="no">msgtypetable.h</includes>
    <class kind="class">omnetpp::nedxml::MsgCodeGenerator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>msgcompiler.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msgcompiler_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <includes id="msgtypetable_8h" name="msgtypetable.h" local="yes" imported="no">msgtypetable.h</includes>
    <includes id="msganalyzer_8h" name="msganalyzer.h" local="yes" imported="no">msganalyzer.h</includes>
    <includes id="msgcodegenerator_8h" name="msgcodegenerator.h" local="yes" imported="no">msgcodegenerator.h</includes>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOptions</class>
    <class kind="class">omnetpp::nedxml::MsgCompiler</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>msgcompilerold.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msgcompilerold_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOptionsOld</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld</class>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOld::TypeDesc</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::ClassInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::ClassInfo::FieldInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::EnumInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::EnumInfo::EnumItem</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>msggenerator.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msggenerator_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <class kind="class">omnetpp::nedxml::MsgGenerator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateMsg</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af1fd0b0846e0e5fa13b999121569a8f8</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>msgparser.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msgparser_8h</filename>
    <includes id="yydefs_8h" name="yydefs.h" local="yes" imported="no">yydefs.h</includes>
    <class kind="class">omnetpp::nedxml::MsgParser</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_NUMERIC</name>
      <anchorfile>msgparser_8h.html</anchorfile>
      <anchor>ab028b9896a89a6d6b252cbd5bbec71ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_CONST_NUM</name>
      <anchorfile>msgparser_8h.html</anchorfile>
      <anchor>a910ec460fe8b7b4c4ddfa576d4f6ff5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_STRING</name>
      <anchorfile>msgparser_8h.html</anchorfile>
      <anchor>a4e4e428e3a6a191834e3ff63bd301866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_BOOL</name>
      <anchorfile>msgparser_8h.html</anchorfile>
      <anchor>a375775d23dbf60915db33f1add80c006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_XML</name>
      <anchorfile>msgparser_8h.html</anchorfile>
      <anchor>a74a3c3ebe3681ab4e034a1319cfb3e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_ANYTYPE</name>
      <anchorfile>msgparser_8h.html</anchorfile>
      <anchor>ae8969deb5b9c71fa28bf843dad18abaf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>msgtypetable.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msgtypetable_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::MsgTypeTable</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::Property</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::Properties</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::FieldInfo</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::ClassInfo</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::EnumItem</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::EnumInfo</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>msgyyutil.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>msgyyutil_8h</filename>
    <includes id="yyutil_8h" name="yyutil.h" local="yes" imported="no">yyutil.h</includes>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <namespace>omnetpp::nedxml::msgyyutil</namespace>
    <member kind="function">
      <type>ASTNode *</type>
      <name>createMsgElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>ae8b3d6e29d5e171a5ea82b281cdc0072</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getOrCreateMsgElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>ae142ef08d203f0b5146a3890e83fc0ec</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>af41992cfd71bc47f0b1392ebe1af96ad</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>ac4e5c765230730eff18604cf849d19d5</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createPropertyValue</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a8435954270cd1b3d6f2082fe9cfc2d95</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a66821d777340e1b004e0efc557af174c</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *locId, const char *comment, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeFileComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a2809d491087c2578dcfc001277d388a7</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>af68fb73038064b3eb57392879034b250</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeRightComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>aff0924dbbc0881a8ba9de5c65bddc8b1</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeTrailingComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a0b398dd0ae2242e7851d9603039be3f1</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>acb958325fe9d6afbb329891296f6dfad</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a68322147be339cb05adea4bfbca03ac7</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc firstpos, YYLoc lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeInnerComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a2f6f2b67b3745f3ce0181292497d50e8</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedcrossvalidator.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedcrossvalidator_8h</filename>
    <class kind="class">omnetpp::nedxml::NedCrossValidator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedgenerator.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedgenerator_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <class kind="class">omnetpp::nedxml::NedGenerator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNed</name>
      <anchorfile>group__NedGenerator.html</anchorfile>
      <anchor>gaca1bed4e93536ed32afc4d94d6d401e5</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedparser.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedparser_8h</filename>
    <includes id="yydefs_8h" name="yydefs.h" local="yes" imported="no">yydefs.h</includes>
    <class kind="class">omnetpp::nedxml::NedParser</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_NUMERIC</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>ab028b9896a89a6d6b252cbd5bbec71ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_CONST_NUM</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a910ec460fe8b7b4c4ddfa576d4f6ff5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_STRING</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a4e4e428e3a6a191834e3ff63bd301866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_BOOL</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a375775d23dbf60915db33f1add80c006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_XML</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>a74a3c3ebe3681ab4e034a1319cfb3e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_ANYTYPE</name>
      <anchorfile>nedparser_8h.html</anchorfile>
      <anchor>ae8969deb5b9c71fa28bf843dad18abaf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedresourcecache.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedresourcecache_8h</filename>
    <includes id="nedtypeinfo_8h" name="nedtypeinfo.h" local="yes" imported="no">nedtypeinfo.h</includes>
    <class kind="struct">omnetpp::nedxml::NedLookupContext</class>
    <class kind="class">omnetpp::nedxml::NedResourceCache</class>
    <class kind="class">omnetpp::nedxml::NedResourceCache::INedTypeNames</class>
    <class kind="class">omnetpp::nedxml::NedResourceCache::CachedTypeNames</class>
    <class kind="struct">omnetpp::nedxml::NedResourceCache::PendingNedType</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedsyntaxvalidator.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedsyntaxvalidator_8h</filename>
    <class kind="class">omnetpp::nedxml::NedSyntaxValidator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedtools.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedtools_8h</filename>
    <class kind="class">omnetpp::nedxml::NedTools</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedtypeinfo.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedtypeinfo_8h</filename>
    <class kind="class">omnetpp::nedxml::NedTypeInfo</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedutil.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedutil_8h</filename>
    <includes id="astnode_8h" name="astnode.h" local="yes" imported="no">astnode.h</includes>
    <class kind="class">omnetpp::nedxml::ASTNodeUtil</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>nedxmldefs.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedxmldefs_8h</filename>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NEDXML_API</name>
      <anchorfile>nedxmldefs_8h.html</anchorfile>
      <anchor>a3915af7fb1c0a123f29e86b0339a6782</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nedyyutil.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>nedyyutil_8h</filename>
    <includes id="yyutil_8h" name="yyutil.h" local="yes" imported="no">yyutil.h</includes>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <namespace>omnetpp::nedxml::nedyyutil</namespace>
    <member kind="function">
      <type>ASTNode *</type>
      <name>createNedElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a21d9c95492b45888690b163a0c422cbf</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getOrCreateNedElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>af8dd91d6d69cae96399f2d7f89000087</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ac9cfbe33d53e014190d3b95ec1a9f52c</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addComponentProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a17ae3e1ca0f134d5e8919049f215f5b3</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a0d1d4df5349b040b2c10b3c469eb788b</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeComponentSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a14e3f8a78679cda60f0927ca4911e6e5</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>setIsNetworkProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a1d9d2bf159fcdc29f2b2317c57b703eb</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a812bc7713960b803a79cb72d20a08b9b</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *locId, const char *comment, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeFileComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>acd5b153ae5b27e769c81b3047f09383d</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a6fc24bc235fa1faf22a83208fbac0b46</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeRightComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>aac76e15ca362e0d4a6ed48c27fcd5358</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeTrailingComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ab4014a0d0b47d01fa0a13ca140ecc219</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ab5f8b1f6226abf60deec034206ab1e22</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ab10556cc298d79d45688245a3cafcc71</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc firstpos, YYLoc lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeInnerComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ac949f49b798c521ed4847897b43a2a63</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ae4125b516b238057f492a0a81b19c568</anchor>
      <arglist>(ParseContext *np, ASTNode *params, YYLoc namepos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a68c99c4c5aeb9df84672c53aca3dd5a3</anchor>
      <arglist>(ParseContext *np, ASTNode *params, const char *name, YYLoc namepos)</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>addGate</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a6f0e3d277e56827fb270af154a03de07</anchor>
      <arglist>(ParseContext *np, ASTNode *gates, YYLoc namepos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapExpressionChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a300459398f519b7f24ca6c6629ffa7ed</anchor>
      <arglist>(ASTNode *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapConnection</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>aa980678106176734a257fed994038cbd</anchor>
      <arglist>(ASTNode *conn)</arglist>
    </member>
    <member kind="function">
      <type>ExpressionElement *</type>
      <name>createExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a19cd06174f3a2d5a5b23876b38d2db9f</anchor>
      <arglist>(ParseContext *np, ASTNode *expr)</arglist>
    </member>
    <member kind="function">
      <type>OperatorElement *</type>
      <name>createOperator</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>acfe1f29355626a6828fab837073ec0f9</anchor>
      <arglist>(ParseContext *np, const char *op, ASTNode *operand1, ASTNode *operand2=nullptr, ASTNode *operand3=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>FunctionElement *</type>
      <name>createFunction</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a36f3bedcd8cc44aca04fdbeb2bf4e95d</anchor>
      <arglist>(ParseContext *np, const char *funcname, ASTNode *arg1=nullptr, ASTNode *arg2=nullptr, ASTNode *arg3=nullptr, ASTNode *arg4=nullptr, ASTNode *arg5=nullptr, ASTNode *arg6=nullptr, ASTNode *arg7=nullptr, ASTNode *arg8=nullptr, ASTNode *arg9=nullptr, ASTNode *arg10=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>af462ab9b3199aef9de3ab6268c26514d</anchor>
      <arglist>(ParseContext *np, YYLoc parampos)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a861f9d277f6240792be1c40a7174dc9a</anchor>
      <arglist>(ParseContext *np, YYLoc parampos, YYLoc modulepos, ASTNode *moduleindexoperand=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createPropertyValue</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a67087557d1f663c056b1c638dd3ec289</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a8424b5f820defd3143cbd52617ce04cb</anchor>
      <arglist>(ParseContext *np, int type, YYLoc valuepos, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a1598880f748d6b3139bd8283089f80ca</anchor>
      <arglist>(ParseContext *np, int type, const char *value, const char *text)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createStringLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a2f5cf3efd9089c094dc26749754012b5</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createQuantityLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>af1ea3fa2c085cea55a1a76ddb9e9b9b6</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>prependMinusSign</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a850ea558e407ef51278a689b541853a3</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOptionalExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a7406f679a10583c8d06efa478eb498c3</anchor>
      <arglist>(ParseContext *np, ASTNode *elem, const char *attrname, YYLoc exprpos, ASTNode *expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a40c7106beb43bd05e29d2d2ef87e6854</anchor>
      <arglist>(ParseContext *np, ASTNode *elem, const char *attrname, YYLoc exprpos, ASTNode *expr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>saxparser.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>saxparser_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::SAXHandler</class>
    <class kind="class">omnetpp::nedxml::SAXParser</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>sourcedocument.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>sourcedocument_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="class">omnetpp::nedxml::SourceDocument</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="file">
    <name>xmlastparser.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>xmlastparser_8h</filename>
    <includes id="errorstore_8h" name="errorstore.h" local="yes" imported="no">errorstore.h</includes>
    <includes id="astnode_8h" name="astnode.h" local="yes" imported="no">astnode.h</includes>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API ASTNode *</type>
      <name>parseXML</name>
      <anchorfile>group__XMLParser.html</anchorfile>
      <anchor>ga89869e7ed5b3f88e4a588fc74cf56150</anchor>
      <arglist>(const char *filename, ErrorStore *errors)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>xmlgenerator.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>xmlgenerator_8h</filename>
    <includes id="astnode_8h" name="astnode.h" local="yes" imported="no">astnode.h</includes>
    <class kind="class">omnetpp::nedxml::XMLGenerator</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>ga5391271808b777a64e21bdfc053e5678</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API std::string</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gae47d2602d0a43c074420782c970df223</anchor>
      <arglist>(ASTNode *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>yydefs.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>yydefs_8h</filename>
    <includes id="nedxmldefs_8h" name="nedxmldefs.h" local="yes" imported="no">nedxmldefs.h</includes>
    <class kind="struct">omnetpp::nedxml::YYLoc</class>
    <class kind="struct">omnetpp::nedxml::ParseContext</class>
    <class kind="struct">omnetpp::nedxml::LineColumn</class>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>YYLTYPE</name>
      <anchorfile>yydefs_8h.html</anchorfile>
      <anchor>a05958fcca5262ce3895ecf3be642dc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE</name>
      <anchorfile>yydefs_8h.html</anchorfile>
      <anchor>a2ceb5b985e149f18e018b142cfdd7264</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>msgLexerSetRecognizeNewKeywords</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc703543b09a58fff2499bfba7f32608</anchor>
      <arglist>(bool opt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>msgLexerSetRecognizeObsoleteKeywords</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>acf055ca779d1c4d26becb7ba3f198744</anchor>
      <arglist>(bool opt)</arglist>
    </member>
    <member kind="function">
      <type>omnetpp::nedxml::ASTNode *</type>
      <name>doParseNed</name>
      <anchorfile>yydefs_8h.html</anchorfile>
      <anchor>ac0dd5f0ff6cf2afec6c24c04fcfc1dbc</anchor>
      <arglist>(omnetpp::nedxml::ParseContext *np, const char *text)</arglist>
    </member>
    <member kind="function">
      <type>omnetpp::nedxml::ASTNode *</type>
      <name>doParseMsg</name>
      <anchorfile>yydefs_8h.html</anchorfile>
      <anchor>adc5101b6d0bb9cbcabf7b7d34296cd76</anchor>
      <arglist>(omnetpp::nedxml::ParseContext *np, const char *text)</arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>pos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a5db42ac8af5c08f937049e91e174b697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>prevpos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad503b230caf787844066a886e5e6ebe5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>yyutil.h</name>
    <path>/root/omnetpp/src/nedxml/</path>
    <filename>yyutil_8h</filename>
    <includes id="astnode_8h" name="astnode.h" local="yes" imported="no">astnode.h</includes>
    <includes id="yydefs_8h" name="yydefs.h" local="yes" imported="no">yydefs.h</includes>
    <namespace>omnetpp</namespace>
    <namespace>omnetpp::nedxml</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DETECT_PARSER_REENTRY</name>
      <anchorfile>yyutil_8h.html</anchorfile>
      <anchor>a728fcedf5bb5a9a421770a5055efe042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>slashifyFilename</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a850d36b8df17da7ecc7954c53cbd6c32</anchor>
      <arglist>(const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>currentLocation</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a39b01b66ea76c0d06475c245e815e822</anchor>
      <arglist>(ParseContext *np)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>createElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a245dc670b73aa5f2d6b485f93e08a47a</anchor>
      <arglist>(ParseContext *np, ASTNodeFactory *factory, int tagcode, ASTNode *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getOrCreateElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0bdeb189aafa8167fb3f75684d13aade</anchor>
      <arglist>(ParseContext *np, ASTNodeFactory *factory, int tagcode, ASTNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a68d5538cd0cf2c4006743d8025e0137c</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a16243da0f1ffd1317e0f95bef325a262</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc firstpos, YYLoc lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapAttributes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ac1de6591b82009a93a263e22407b2b8d</anchor>
      <arglist>(ASTNode *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transferChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a74442e45f1cd02ad2a57657df699945f</anchor>
      <arglist>(ASTNode *from, ASTNode *to)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>trimQuotes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aefc88b47e9227a2fe7a4c1ad36d822fe</anchor>
      <arglist>(YYLoc vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>trimDoubleBraces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad6ae783245f434066812db8ba6953718</anchor>
      <arglist>(YYLoc vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a7305739b1acbebaf990eeeedbde0bb3f</anchor>
      <arglist>(ParseContext *np, YYLoc)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22be248d77562934acd27795fe9dd2e9</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>removeSpaces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad51c182b46f7af5ed1fe371ca018a4a2</anchor>
      <arglist>(ParseContext *np, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3ed89416c115554bcf88ef10f3ee5389</anchor>
      <arglist>(YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>makeYYLoc</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a429112ade61d714f5828e0526c538b18</anchor>
      <arglist>(int fl, int fc, int ll, int lc)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>makeEmptyYYLoc</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a5f54677fe190615f90e4985d510174f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>parseInProgress</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a7a43dcdf8e17c34a1a48b8f463b8aa5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ASTBuilder</name>
    <filename>classomnetpp_1_1nedxml_1_1ASTBuilder.html</filename>
    <base>omnetpp::nedxml::SAXHandler</base>
    <member kind="function">
      <type></type>
      <name>ASTBuilder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>a3fd1be5979eb43df8b22cce891a383a8</anchor>
      <arglist>(const char *filename, ErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ASTBuilder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>a5ad8ca5726586fed8a58ab824ccdcb5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>a2baedad0469a30369c454df65b33fdbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>ad31b64b6873dce1213c54526ba4b08e0</anchor>
      <arglist>(const char *name, const char **atts) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>ae9e47045c32ddad317d86e4f1f535113</anchor>
      <arglist>(const char *name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>characterData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>aa6e779a1acdaeb41c04f1e8df611d25b</anchor>
      <arglist>(const char *s, int len) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processingInstruction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>abfa3de2e89b18795a78679db92bd2ec3</anchor>
      <arglist>(const char *target, const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>a798d9d1a920b12875e97704b3948f3ee</anchor>
      <arglist>(const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>a27d772de2d9c4350de0b15d2dcf7566a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>af278d582cc76d0cab91be78e4c19bf5b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>ad31b64b6873dce1213c54526ba4b08e0</anchor>
      <arglist>(const char *name, const char **atts) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>ae9e47045c32ddad317d86e4f1f535113</anchor>
      <arglist>(const char *name) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>characterData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>aa6e779a1acdaeb41c04f1e8df611d25b</anchor>
      <arglist>(const char *s, int len) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processingInstruction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>abfa3de2e89b18795a78679db92bd2ec3</anchor>
      <arglist>(const char *target, const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>a798d9d1a920b12875e97704b3948f3ee</anchor>
      <arglist>(const char *data) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>a27d772de2d9c4350de0b15d2dcf7566a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTBuilder.html</anchorfile>
      <anchor>af278d582cc76d0cab91be78e4c19bf5b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ASTNode</name>
    <filename>classomnetpp_1_1nedxml_1_1ASTNode.html</filename>
    <member kind="function">
      <type></type>
      <name>ASTNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a473f45851dcffed20d205a09205b4e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ASTNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a9d95779dbea86a5b5866c456bf537344</anchor>
      <arglist>(ASTNode *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ASTNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a537df1ecfeb4008515a891b9e946e896</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ASTNode *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>af00c929d253ec3e3be19b83d60529bc2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>dupTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a8d13263736b521ecb0d9eee9bbec26b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a3d4b5e49794506e70a5667bc460c3c43</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ab0efcb57ef5caaaaf5b4c0112d0e3a6e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>getId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a1a2e63a0edf21953d7893f50a0af43a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a0225b359e80ca6f2672b1857a0741936</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a39394bfb3af4cb307b45c18b0415256f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a9a51918e98bc26acd3da543cd139b2ad</anchor>
      <arglist>(const char *loc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const SourceRegion &amp;</type>
      <name>getSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ace1ae6dc535256c46d658de5a8629343</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a592a1f9a07e307ff6c5e26a6f2cd99b4</anchor>
      <arglist>(const SourceRegion &amp;region)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyDefaults</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a3a860c3446918103af579d5079ed7252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ac5125024ce6e879f82bc9513de47193f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a5b07ad0113a4639628a3874b9f9c7232</anchor>
      <arglist>(int k) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lookupAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a20642a39ddf6b6bb6ba2141a4c0a99b4</anchor>
      <arglist>(const char *attr) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a10022e9e07e39b629dcc4b8e9c9e2bd7</anchor>
      <arglist>(int k) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a8b3e6a1a39878712ea629f2720e0df4b</anchor>
      <arglist>(const char *attr) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a7987b78b6a38e6215c96d9bd443b701d</anchor>
      <arglist>(int k, const char *value)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a1d6c8530525754f3854aa01ec1390282</anchor>
      <arglist>(const char *attr, const char *value)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a4ea1705373d1c9e926482b16a904d36e</anchor>
      <arglist>(int k) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aa9d21a56a14dc805f5cc4424b9ee556f</anchor>
      <arglist>(const char *attr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getParent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a11303eb9265f89adfcf345bdcfe6af14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getFirstChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ad99a808fb292a16a2a7cd86e292f43e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getLastChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a0475e131f9aebb4b37a9a345ef091368</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getNextSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a9f93f08060135049649cee4562df1c91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getPrevSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a67c512a13fd24c2eca74a1a76eb0de3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>appendChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a902adb2d772720895902aa43f42d1d25</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildBefore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a50cab8bc0abd059ff395ce388d9f48f1</anchor>
      <arglist>(ASTNode *where, ASTNode *newnode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>removeChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a5698d5101467864fdcdef694a687f5a4</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getFirstChildWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aef9700e735f2dfa5b911dc7afa7d8613</anchor>
      <arglist>(int tagcode) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getNextSiblingWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aebd9d9ec0def94bc1722463c99614ff3</anchor>
      <arglist>(int tagcode) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a613059b13693a85a09141cf9044fc969</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildrenWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>afcb10b7be2da5e26c4cb6e212efd84de</anchor>
      <arglist>(int tagcode) const</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getFirstChildWithAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a2b12c038deda0ada63999e5932fe134c</anchor>
      <arglist>(int tagcode, const char *attr, const char *attrvalue=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getParentWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ae8f07e65f2a20d231000eae8d546e256</anchor>
      <arglist>(int tagcode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ab4ffbe735bd0fe6456e0de8823e518b3</anchor>
      <arglist>(UserData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UserData *</type>
      <name>getUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a943e4304fff4e3b4f7bad815bcf9ebc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumCreated</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a22be40839ba01ebe633ebb24fb48fc85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumExisting</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aad1fc66eac05ff2b3423bbd14f8329fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>stringToBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aedcfde60cdf29b73c3a2cc3757212343</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static const char *</type>
      <name>boolToString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ac3396f34db702b892b13dc9be8514c36</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>stringToEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>af65132b827744b3ce3cf262aa7001d1f</anchor>
      <arglist>(const char *s, const char *vals[], int nums[], int n)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static const char *</type>
      <name>enumToString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a1b822cdbe3713d52f858e24dfa4eb859</anchor>
      <arglist>(int b, const char *vals[], int nums[], int n)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>validateEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aba14daa136035c68dbabf72743d21ffe</anchor>
      <arglist>(int b, const char *vals[], int nums[], int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ASTNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a473f45851dcffed20d205a09205b4e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ASTNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a9d95779dbea86a5b5866c456bf537344</anchor>
      <arglist>(ASTNode *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ASTNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a537df1ecfeb4008515a891b9e946e896</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ASTNode *</type>
      <name>dup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>af00c929d253ec3e3be19b83d60529bc2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>dupTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a8d13263736b521ecb0d9eee9bbec26b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getTagName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a3d4b5e49794506e70a5667bc460c3c43</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getTagCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ab0efcb57ef5caaaaf5b4c0112d0e3a6e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long</type>
      <name>getId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a1a2e63a0edf21953d7893f50a0af43a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a0225b359e80ca6f2672b1857a0741936</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a39394bfb3af4cb307b45c18b0415256f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a9a51918e98bc26acd3da543cd139b2ad</anchor>
      <arglist>(const char *loc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const SourceRegion &amp;</type>
      <name>getSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ace1ae6dc535256c46d658de5a8629343</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceRegion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a592a1f9a07e307ff6c5e26a6f2cd99b4</anchor>
      <arglist>(const SourceRegion &amp;region)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyDefaults</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a3a860c3446918103af579d5079ed7252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ac5125024ce6e879f82bc9513de47193f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a5b07ad0113a4639628a3874b9f9c7232</anchor>
      <arglist>(int k) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>lookupAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a20642a39ddf6b6bb6ba2141a4c0a99b4</anchor>
      <arglist>(const char *attr) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a10022e9e07e39b629dcc4b8e9c9e2bd7</anchor>
      <arglist>(int k) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a8b3e6a1a39878712ea629f2720e0df4b</anchor>
      <arglist>(const char *attr) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a7987b78b6a38e6215c96d9bd443b701d</anchor>
      <arglist>(int k, const char *value)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a1d6c8530525754f3854aa01ec1390282</anchor>
      <arglist>(const char *attr, const char *value)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a4ea1705373d1c9e926482b16a904d36e</anchor>
      <arglist>(int k) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getAttributeDefault</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aa9d21a56a14dc805f5cc4424b9ee556f</anchor>
      <arglist>(const char *attr) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getParent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a11303eb9265f89adfcf345bdcfe6af14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getFirstChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ad99a808fb292a16a2a7cd86e292f43e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getLastChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a0475e131f9aebb4b37a9a345ef091368</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getNextSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a9f93f08060135049649cee4562df1c91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getPrevSibling</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a67c512a13fd24c2eca74a1a76eb0de3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>appendChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a902adb2d772720895902aa43f42d1d25</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildBefore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a50cab8bc0abd059ff395ce388d9f48f1</anchor>
      <arglist>(ASTNode *where, ASTNode *newnode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>removeChild</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a5698d5101467864fdcdef694a687f5a4</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getFirstChildWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aef9700e735f2dfa5b911dc7afa7d8613</anchor>
      <arglist>(int tagcode) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getNextSiblingWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aebd9d9ec0def94bc1722463c99614ff3</anchor>
      <arglist>(int tagcode) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a613059b13693a85a09141cf9044fc969</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumChildrenWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>afcb10b7be2da5e26c4cb6e212efd84de</anchor>
      <arglist>(int tagcode) const</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getFirstChildWithAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a2b12c038deda0ada63999e5932fe134c</anchor>
      <arglist>(int tagcode, const char *attr, const char *attrvalue=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getParentWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ae8f07e65f2a20d231000eae8d546e256</anchor>
      <arglist>(int tagcode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumCreated</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a22be40839ba01ebe633ebb24fb48fc85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>getNumExisting</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>aad1fc66eac05ff2b3423bbd14f8329fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>ab4ffbe735bd0fe6456e0de8823e518b3</anchor>
      <arglist>(UserData *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UserData *</type>
      <name>getUserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNode.html</anchorfile>
      <anchor>a943e4304fff4e3b4f7bad815bcf9ebc2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ASTNodeFactory</name>
    <filename>classomnetpp_1_1nedxml_1_1ASTNodeFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ASTNodeFactory</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeFactory.html</anchorfile>
      <anchor>aff94faa8c62f3a06f860590bf78db652</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ASTNode *</type>
      <name>createElementWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeFactory.html</anchorfile>
      <anchor>aad2a769b361e267184aec6993bdbbe66</anchor>
      <arglist>(const char *tagName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ASTNode *</type>
      <name>createElementWithTag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeFactory.html</anchorfile>
      <anchor>a3df585e4fafc0432e7c0de09fdb0b18d</anchor>
      <arglist>(int tagCode)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ASTNodeUtil</name>
    <filename>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</filename>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getLocalStringProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>ae2c8bb54fed8bc63267e871372287a8c</anchor>
      <arglist>(ASTNode *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getLocalBoolProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a8336569cb0de141f8ad8781ecb50f427</anchor>
      <arglist>(ASTNode *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PropertyElement *</type>
      <name>getLocalProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a57bcc122474fa17eb1226bb2899a871e</anchor>
      <arglist>(ASTNode *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiteralElement *</type>
      <name>getTheOnlyValueFrom</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a6ec1f6197c8fbf529e13b9e895ff48a3</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>propertyAsBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a86b6d0fd716fa1ee734f804c004e7f71</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>propertyAsString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>ab23216deddb557ed3031a16b979b1793</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a40850cee5b33e0372712e268f88f159d</anchor>
      <arglist>(ASTNode *node1, ASTNode *node2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compareTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a78889cb21de7e7f6e143f995d9e286c7</anchor>
      <arglist>(ASTNode *node1, ASTNode *node2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getLocalStringProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>ae2c8bb54fed8bc63267e871372287a8c</anchor>
      <arglist>(ASTNode *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getLocalBoolProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a8336569cb0de141f8ad8781ecb50f427</anchor>
      <arglist>(ASTNode *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PropertyElement *</type>
      <name>getLocalProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a57bcc122474fa17eb1226bb2899a871e</anchor>
      <arglist>(ASTNode *parent, const char *name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiteralElement *</type>
      <name>getTheOnlyValueFrom</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a6ec1f6197c8fbf529e13b9e895ff48a3</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>propertyAsBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a86b6d0fd716fa1ee734f804c004e7f71</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>propertyAsString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>ab23216deddb557ed3031a16b979b1793</anchor>
      <arglist>(PropertyElement *property)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a40850cee5b33e0372712e268f88f159d</anchor>
      <arglist>(ASTNode *node1, ASTNode *node2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compareTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ASTNodeUtil.html</anchorfile>
      <anchor>a78889cb21de7e7f6e143f995d9e286c7</anchor>
      <arglist>(ASTNode *node1, ASTNode *node2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedResourceCache::CachedTypeNames</name>
    <filename>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1CachedTypeNames.html</filename>
    <base>omnetpp::nedxml::NedResourceCache::INedTypeNames</base>
    <member kind="function">
      <type></type>
      <name>CachedTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>af0bc43c808c683218a06e6a8012c6b84</anchor>
      <arglist>(NedResourceCache *p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>contains</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a083f92250f255122a300c81b6c276ae3</anchor>
      <arglist>(const char *qname) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>size</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a421227cff207a081949c04c8c70ce963</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>get</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a826187a607cb51315fb12eb94ef0a5d2</anchor>
      <arglist>(int k) const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NedResourceCache *</type>
      <name>p</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1CachedTypeNames.html</anchorfile>
      <anchor>a4266d06149ab98197c70243e13453977</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::DtdValidationUtils::Choice</name>
    <filename>structomnetpp_1_1nedxml_1_1DtdValidationUtils_1_1Choice.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>tags</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1DtdValidationUtils_1_1Choice.html</anchorfile>
      <anchor>ac4e09a5ba4050133abca219b6f3b7d76</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mult</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1DtdValidationUtils_1_1Choice.html</anchorfile>
      <anchor>a97a0e6c37d0527cd4ead4d207348e47c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCompilerOld::ClassInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</filename>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::ClassInfo::FieldInfo</class>
    <member kind="typedef">
      <type>std::vector&lt; FieldInfo &gt;</type>
      <name>Fieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a44b0d037e0faae6ef8165ef2c76c219e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a73309f69b50eaca593b93c9203a21448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>nedElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>ab2212f01bed5ed1474ab6506526b1cf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>keyword</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>ae2dcf667178b1c1506060e76fa8b88b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a0cfb9a9167aceb4035a5f731a1b4cabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgbase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a9aef67e390d0ac9bd1de9b6f38ac8f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Properties</type>
      <name>props</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a211d1549edeaf1dda987e4b1d32698a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>gap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>abe4b893522c2d79335ba3bb1e1de65f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>omitgetverb</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a9c926d7f6c9a3ead632777e0fd669413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClassType</type>
      <name>classtype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a1741ebe5774f50ae9bd57f0f68b7e5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a6460004b60a6f6d3457132fd63a45163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>realmsgclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a9b5e72257aa82c66c17dc8330f36f8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgbaseclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>aa9af4f17f40f3abb5d4702cd7c18fdc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgdescclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>acbdf4ada5df5ee0a9fae1c794c250d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fieldnamesuffix</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a264d172cb02935757d16fe1566151e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Fieldlist</type>
      <name>fieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>ae8763e6e06dc82740e841c9d199fee75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Fieldlist</type>
      <name>baseclassFieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>afa63d45cb88ac07c1512764bce35ffd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generate_class</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a15fe7744149f8f99919dbc990e27881a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generate_descriptor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a32c3e196a4fe1b72c54e817a451f24ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generate_setters_in_descriptor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a2da770bd096d34e188f9f38a51afc2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>ac2994442f90ec0a895764ae27f0d625e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>msgbaseqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a07764c85f7942f44b94f2dc782864312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringVector</type>
      <name>implements</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo.html</anchorfile>
      <anchor>a9a9347bafa9ba71ae607cbbc03812582</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgTypeTable::ClassInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; FieldInfo &gt;</type>
      <name>Fieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a44b0d037e0faae6ef8165ef2c76c219e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>astNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ad4cf6a1a15b88dffa2bac73b544ad686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>keyword</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ae2dcf667178b1c1506060e76fa8b88b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>qname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>af9d3de1f7f9ff554ce07ad3fcfa22162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Properties</type>
      <name>props</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a211d1549edeaf1dda987e4b1d32698a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>classInfoComplete</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>aa74d83b45b20f365c1884c45dea95b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>classBeingAnalyzed</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a75083da81a464ebf3bc8cdfbe6c5120d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fieldsComplete</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>adfb17e3038421f19edf96c873f2380e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fieldsBeingAnalyzed</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a471a8a16b3748c1914c2fdf714d02fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>extendsQName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ada98b87f988bb94bd7680cd37ae00e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>extendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a7449214381faecdbdf2f4bbfb2c49fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>customize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ac77b7acf68661186cc4731c5d61bd2ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>omitGetVerb</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a66d9e7ff4e0f7dea6f5b2cd83e5355b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>abd5d874f71ce81c4886049feefa0b987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iscObject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ad06da5d4c5b877a7659ad28076cecb0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iscNamedObject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>afe18dff04dd9b4fbab653d890d3ac656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iscOwnedObject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>aa9f22acbeb96707810c2d1d4912b1706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a7395af8c815ea4f0db50fd4a3e47d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isImported</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a8bf6d1cdcd87274fa5381e6bee467081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>subclassable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a56493bd35b40e339a297ff1e1d99e55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>supportsPtr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a8cdb650869a648f5ad69f0ff2e9afc91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>namespaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ab6ad09d56120e3b28868679c6bf23393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>className</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a7a53726c8d2e28a1e948ed39b24ed607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>realClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a674e564992d32c9c92e258059bdd9ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>baseClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a33621c136db0c9bccb275123cc4699da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>descriptorClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a45a25783fce0b3036592a93655aea102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fieldNameSuffix</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a4f95c989e7b645ce61ee6699ddc6d4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Fieldlist</type>
      <name>fieldList</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a76d10fb7268fc6af3848a367a7d0695b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Fieldlist</type>
      <name>baseclassFieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>afa63d45cb88ac07c1512764bce35ffd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a7d218d777b21b3da16555eae23ffd8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateDescriptor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a627a6b6fd3318d7e36c4aec8a1442116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateSettersInDescriptor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a9e77736446478288974fd6c5700729b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringVector</type>
      <name>implements</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a9a9347bafa9ba71ae607cbbc03812582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>beforeChange</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a8c711c83f6fd96ed07009a780d7a3e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>str</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a5d55e2558544e2ad2ea0b54f8e3d41fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>defaultValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ab60a0f4d8e7b2b0af8c36f6b4737331b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpaque</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>aafa0aa4842bc9acd32ffa5aa9fed33af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>byValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ab167adf10c704043888c9959122924d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isEditable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a5312e6acaddd851f6a2644f74ca6dd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dataTypeBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>af00a3094acf9107acd15a5915011b783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>argTypeBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>aac4049a6b2aff412972ef6250d192170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>returnTypeBase</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>ae14f49d53c953bb40d60819592d342ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>acab6824650c40277e032c79e687993e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fromString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>a3d65775c1fd19074b871281af422f28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>clone</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>abafd010de921badd10ea8e1e8e8b3ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getterConversion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1ClassInfo.html</anchorfile>
      <anchor>affbba95cfa4d9c3e5d25554fbfe79e08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::DtdValidationUtils</name>
    <filename>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</filename>
    <class kind="struct">omnetpp::nedxml::DtdValidationUtils::Choice</class>
    <member kind="function">
      <type></type>
      <name>DtdValidationUtils</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a2510b5a88443c50439d8248944e12988</anchor>
      <arglist>(ErrorStore *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSequence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a61746ef5b6100ff1907acfea7ad9e1be</anchor>
      <arglist>(ASTNode *node, int tags[], char mult[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkChoice</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a5cef0734df92440041dcc78cb7f91b24</anchor>
      <arglist>(ASTNode *node, int tags[], char mult)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSeqOfChoices</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a1f990eaf176789301310c460d3e5aafb</anchor>
      <arglist>(ASTNode *node, Choice choices[], int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkEmpty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a40c6fc8a3d43c8874542adb021769535</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkRequiredAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>aff50b19e893786efcf99ec378123b9cf</anchor>
      <arglist>(ASTNode *node, const char *attr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkEnumeratedAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a24497f8881798cd8d4373f1761cf1914</anchor>
      <arglist>(ASTNode *node, const char *attr, const char *vals[], int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkNameAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>af3b49431dbe7911386dc052d97f78436</anchor>
      <arglist>(ASTNode *node, const char *attr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkCommentAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a94cfcb9ed88efa77cbca6ba2db4f4472</anchor>
      <arglist>(ASTNode *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>tryCheckChoice</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a0b15d1cbdb1f1045d28b2c452f42181e</anchor>
      <arglist>(ASTNode *node, ASTNode *&amp;curchild, int tags[], char mult)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1DtdValidationUtils.html</anchorfile>
      <anchor>a967b3a864d7d94266c5bd5781c1be1e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCompilerOld::EnumInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo.html</filename>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::EnumInfo::EnumItem</class>
    <member kind="typedef">
      <type>std::vector&lt; EnumItem &gt;</type>
      <name>FieldList</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo.html</anchorfile>
      <anchor>a15fd354ee765901618a3243b371ce87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo.html</anchorfile>
      <anchor>a8584422dc0b7db6dcad8339605886cf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EnumElement *</type>
      <name>nedElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo.html</anchorfile>
      <anchor>ad103adc07af4647f82d25856096818f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo.html</anchorfile>
      <anchor>a9516335b9a0b54f4c079ce58233f32ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumQName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo.html</anchorfile>
      <anchor>a39eefe0f60e493336ef8a1d809bead95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FieldList</type>
      <name>fieldlist</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo.html</anchorfile>
      <anchor>a667266c6e162d0200a9f4648a7bca61f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgTypeTable::EnumInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumInfo.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; EnumItem &gt;</type>
      <name>FieldList</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumInfo.html</anchorfile>
      <anchor>a15fd354ee765901618a3243b371ce87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>astNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumInfo.html</anchorfile>
      <anchor>ad4cf6a1a15b88dffa2bac73b544ad686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumInfo.html</anchorfile>
      <anchor>a9516335b9a0b54f4c079ce58233f32ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumQName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumInfo.html</anchorfile>
      <anchor>a39eefe0f60e493336ef8a1d809bead95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumInfo.html</anchorfile>
      <anchor>abab2b4a077bcf021e661e7193591bdc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FieldList</type>
      <name>fieldList</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumInfo.html</anchorfile>
      <anchor>ad621a9b69883dea2cdfa1e85d2d41e91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCompilerOld::EnumInfo::EnumItem</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo_1_1EnumItem.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>a5984280932fb9faaf86efe3a7e10eda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>nedElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>ab2212f01bed5ed1474ab6506526b1cf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>a5c33da5929c9f2f9ef8d006d2350e6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1EnumInfo_1_1EnumItem.html</anchorfile>
      <anchor>ae292722fe020ddc7c05fc5db23145ed0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgTypeTable::EnumItem</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumItem.html</filename>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>astNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumItem.html</anchorfile>
      <anchor>ad4cf6a1a15b88dffa2bac73b544ad686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumItem.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumItem.html</anchorfile>
      <anchor>a5c33da5929c9f2f9ef8d006d2350e6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1EnumItem.html</anchorfile>
      <anchor>ae292722fe020ddc7c05fc5db23145ed0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::ErrorStore</name>
    <filename>classomnetpp_1_1nedxml_1_1ErrorStore.html</filename>
    <member kind="function">
      <type></type>
      <name>ErrorStore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ae12881b4eeaabd7b85160ea9d3809d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ErrorStore</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a399d618394c727e75e353ecd68ba10ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrintToStderr</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>aa19428448a259a39042241c6a57fde1f</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addError</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a65a34d3befc90d32b8b38a515a65eb23</anchor>
      <arglist>(ASTNode *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addError</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ab4e81cecd0bafdf12c66cb433d9a5877</anchor>
      <arglist>(const char *location, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWarning</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a3def82e740718bec1c1fbd4c5627c626</anchor>
      <arglist>(ASTNode *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWarning</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a4bc594376a929050061e979f6ff08d4d</anchor>
      <arglist>(const char *location, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a856d1cd74863999228383808ddb92bff</anchor>
      <arglist>(ASTNode *context, int severity, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ad5d22a6ba47e9ce7a53b9f683c938496</anchor>
      <arglist>(const char *location, int severity, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a644718bb2fb240de962dc3c9a1fdf0dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numMessages</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a70c6372041fe6513fbbb01bb108beac7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsError</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a857339199e970ac924fe9bedd0e39971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ac8bb3912a3ce86b15842e79d0b421204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findFirstErrorFor</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a514b77027b4d75706ed07fda710ff863</anchor>
      <arglist>(ASTNode *node, int startIndex) const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorSeverity</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a07c5226ac7dc001aeb29b57f9360f058</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>errorSeverityCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ac1efd0a34bd07fbbf87492ddb327649c</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a6b41674018f9afff41c963e1b818acc3</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>errorContext</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ad4e163f3788f4ed99d788263e9e919fd</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a7f6b956a10fe45994d70aabf6f5a21af</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>severityName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a151623967094e13c9ccfacd81f95b7a2</anchor>
      <arglist>(int severity)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorSeverity</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a07c5226ac7dc001aeb29b57f9360f058</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>errorSeverityCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ac1efd0a34bd07fbbf87492ddb327649c</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorLocation</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a6b41674018f9afff41c963e1b818acc3</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>errorContext</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>ad4e163f3788f4ed99d788263e9e919fd</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>errorText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1ErrorStore.html</anchorfile>
      <anchor>a7f6b956a10fe45994d70aabf6f5a21af</anchor>
      <arglist>(int i) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCompilerOld::ClassInfo::FieldInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>FieldInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a1d4c2600a99cb491f8f2681a6933708a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>astNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ad4cf6a1a15b88dffa2bac73b544ad686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a743e93a25d8ce8b513e74ca768364f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ftype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a7061426e98bc1b0bac5c823ce67df3b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ftypeqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aa40e723ef26f2727ca8c16d935c0220a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fval</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a8fe6a4fced40d8a1c667c07ff189e463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fisabstract</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a194034d87f5b1c0ba6708be0d5d88297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fispointer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a04f571b4f31d0f6d2d8a3b20ff3ca255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fisarray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a7a94d0daf9b09734b6fe67bc58ce0542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>farraysize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a25f93fa216e9a80df1c17a1b3c9c3652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Properties</type>
      <name>fprops</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a09fde7e00013eaf2374fee7ffe79e024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fisprimitivetype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a8e6ea7acde29a1dda7eeb0ac78cf1de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClassType</type>
      <name>classtype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a1741ebe5774f50ae9bd57f0f68b7e5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>datatype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a163bb7504578a26dd55c2018a7fc9b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>argtype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ae2c3d0cef59c7ec873ea5f0178fc6bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rettype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a07adcbaf19ddda37788a910a3b576aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>var</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a4ec082b22f5c94580340122a3e1f3a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>argname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a7498022263862462a555657bfbd9e8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>varsize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aa551dd5e6ab1af483383b36ccd812fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fsizetype</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a159595396e3c8b97e887f1f0acdadb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a83a24e33fd360e57bd74949e0206f491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>setter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a9132556a0634fde04a9af195c9fe03fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>alloc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a047cdb36f1380a89649a359cb8bca0a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getsize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a64f9f0472a14e89783148453c2e9abc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>tostring</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a41ba71e690a06411967436dd85e4ccf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fromstring</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aeefa7c5e82968491650f19f4709178b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>maybe_c_str</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a8517a7f5158a7c2731c5f528a6695fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ae52e92c3d08f83b0bb28a8420e5d7665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumqname</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>aaa5f22f65e794e3cb7075cf1104e8078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fnopack</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a743ec7b92e166d8da103481e76818bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>feditable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>a8510fa469ce9410c7d43e5773e58a509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>editNotDisabled</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>ab89c6a746c3a799055046c76db58f3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fopaque</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1ClassInfo_1_1FieldInfo.html</anchorfile>
      <anchor>afa8140ff1241363ef4beaba33bea7371</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgTypeTable::FieldInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</filename>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>astNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ad4cf6a1a15b88dffa2bac73b544ad686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a75b160f574a0be26114bae2c7686a5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>typeQName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a6926ba4a651a15ca8f3c7c65b069d230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a5c33da5929c9f2f9ef8d006d2350e6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbolicConstant</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a67258685491ec2fe3280fab2c6ca850d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isAbstract</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a8b6a66ac3f44c050d77ae0b675fe6e00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isConst</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>aaf9c76d0912a3c5fefe583bb2529ad53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>byValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ab167adf10c704043888c9959122924d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isPointer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a902d97cb0abcb6b96a6d882a1137e755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOwnedPointer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>af5c24bce25b70836024865f015007fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isArray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a9986550257ee8995937f78e6624b0df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isDynamicArray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ade4689e96f68cd17282c5c59facda5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isFixedArray</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>afb9fdbe7a037810a0f11f5d7b2fbabf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>arraySize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>afab2161638856c52b6ca52525a81428b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Properties</type>
      <name>props</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a211d1549edeaf1dda987e4b1d32698a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>abd5d874f71ce81c4886049feefa0b987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iscObject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ad06da5d4c5b877a7659ad28076cecb0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iscNamedObject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>afe18dff04dd9b4fbab653d890d3ac656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iscOwnedObject</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>aa9f22acbeb96707810c2d1d4912b1706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dataType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a6e6d235fe659837e9da63752e9148246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>argType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a8a86995a77cf0f3145a2c828af5041c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>returnType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ab37da83e236719531939e2ca37f090bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mutableReturnType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a8dc3bb187abe94f856704f86f04f981c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>var</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a4ec082b22f5c94580340122a3e1f3a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>argName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ac36eef66ebbe94cf11cb843772a54fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sizeVar</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>abc218db7ded6d4ae280f9f5991a1547d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sizeType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a5eb4a4b8f780677d57cfe40ac95f7058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a83a24e33fd360e57bd74949e0206f491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getterForUpdate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a80c1db9ed1c814d1d062b028c4c1cebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasGetterForUpdate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a8edf4d4365d896b38e1d339847acf238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowReplace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ae85b00fc45414cd705f44df04b4133bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dropper</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a75ad731565d39cad07e7da5922c1ddb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>clone</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>abafd010de921badd10ea8e1e8e8b3ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>setter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a9132556a0634fde04a9af195c9fe03fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>inserter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a611942b6dd78bd8c27ebb4cd27f394c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>eraser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a153faa90cb3771e485da1bdaad044ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sizeSetter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ac64e45ab37643ae8d59bb700a7f86646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sizeGetter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>abe57526b82fc5edcd5cac7068cb29020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>acab6824650c40277e032c79e687993e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fromString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a3d65775c1fd19074b871281af422f28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>getterConversion</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>affbba95cfa4d9c3e5d25554fbfe79e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a9516335b9a0b54f4c079ce58233f32ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>enumQName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a39eefe0f60e493336ef8a1d809bead95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>nopack</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ac007c32bdc928331fe7477e559c276da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isEditable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>a5312e6acaddd851f6a2644f74ca6dd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpaque</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>aafa0aa4842bc9acd32ffa5aa9fed33af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>overrideGetter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ababddef792c960aa9ea6e17e070e0231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>overrideSetter</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1FieldInfo.html</anchorfile>
      <anchor>ab3132d70c8fd0eff6ae3235f1ad3fda5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedResourceCache::INedTypeNames</name>
    <filename>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1INedTypeNames.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>contains</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1INedTypeNames.html</anchorfile>
      <anchor>a54a0caec4e575519b6840222ef75375f</anchor>
      <arglist>(const char *qname) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>size</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1INedTypeNames.html</anchorfile>
      <anchor>a36b716289158c33f86a8cf30219be68c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>get</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1INedTypeNames.html</anchorfile>
      <anchor>aa98199a99d0fe98db9529ba055cdb29e</anchor>
      <arglist>(int k) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~INedTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache_1_1INedTypeNames.html</anchorfile>
      <anchor>af48297c45d5946b428c8289cba0e2cec</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::LineColumn</name>
    <filename>structomnetpp_1_1nedxml_1_1LineColumn.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>li</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1LineColumn.html</anchorfile>
      <anchor>a847b6d60ac75de6b0239e2f1ffac4af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>co</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1LineColumn.html</anchorfile>
      <anchor>a6cebf5f34184e082168b8ef6c7151c44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgAnalyzer</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</filename>
    <member kind="typedef">
      <type>std::set&lt; std::string &gt;</type>
      <name>StringSet</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ab3141b0267d1a2bb419d5da1b19bbc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::Property</type>
      <name>Property</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>af44c04a6f074ae8c1ca8bbb7255ced30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::Properties</type>
      <name>Properties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a34a812e1bd750b1b429f2e1594378135</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::FieldInfo</type>
      <name>FieldInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a265a434a3d093f0504063525718d9a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::ClassInfo</type>
      <name>ClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ab9abe8424ec6048e9073f7c9db3c5390</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::EnumItem</type>
      <name>EnumItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a71e47fbb39d248635bff1fe38ad198df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::EnumInfo</type>
      <name>EnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a0167fc15fae149ec7869c8f53d4f73ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgAnalyzer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ac57504682094b10b07f7373e592d80af</anchor>
      <arglist>(const MsgCompilerOptions &amp;opts, MsgTypeTable *typeTable, ErrorStore *errors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MsgAnalyzer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a1e1f093efc03acb748b69a1253fc9123</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClassInfo</type>
      <name>extractClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a3fe51a66d8db135ec28ba9ea5bb3cc53</anchor>
      <arglist>(ASTNode *node, const std::string &amp;namespaceName, bool isImported)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureAnalyzed</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>acaaf3026dfdb75c702623a9d02f8208c</anchor>
      <arglist>(ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureFieldsAnalyzed</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a4307df357a6502608706dfdf2023d6ce</anchor>
      <arglist>(ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function">
      <type>EnumInfo</type>
      <name>extractEnumDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a13442bbc400999d9e85715b84c7d3334</anchor>
      <arglist>(EnumDeclElement *node, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function">
      <type>EnumInfo</type>
      <name>extractEnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ac4b730379607343bbff232ce44abcecf</anchor>
      <arglist>(EnumElement *node, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function">
      <type>ClassInfo</type>
      <name>extractClassInfoFromEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a4e0dccf2e695c4621ce71b89b8dfddb5</anchor>
      <arglist>(EnumElement *node, const std::string &amp;namespaceName, bool isImported)</arglist>
    </member>
    <member kind="function">
      <type>Property</type>
      <name>extractProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a473c09c28a4459957a8beb8024e6b09c</anchor>
      <arglist>(PropertyElement *propertyElem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateFileProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>aa5da48fb8a93340437c95c093ec204f4</anchor>
      <arglist>(const Property &amp;property)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static StringSet</type>
      <name>RESERVED_WORDS</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a3690deebab508d44b1119f27d6df85da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ATT_NAME</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a8df4acc52feb429da6b59976df879dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ATT_EXTENDS_NAME</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a6d477c54ec4ca5976edd20f5a1848391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_PROPERTY</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a17192338254a9148ec40e76355a8d3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_ACTUALLY</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a7d586bffffdfffc8a20962a46de2e80f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_PRIMITIVE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>adcfb49429daebafe0ad9861b6dc635e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_OPAQUE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a031af543fe811ef28e3350fef921076e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_BYVALUE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>abc8a3592ca2c30c6e0771b00c7d6fc5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_SUPPORTSPTR</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a0cba279070b90b8df1c3ccd08d4dc938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_SUBCLASSABLE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a5cb20495397e928e53bb5e7ee43c2cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_DEFAULTVALUE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a8c4e90112c491038be2558c1490fce15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_CPPTYPE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a993b6de10211d40ac7cae1fd09e2b64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_ARGTYPE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>aafe0510d70b5d4b6cb59a12c26b2ff87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_RETURNTYPE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a3e91ff5bf3ba4d2e60e34795ccd04ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_TOSTRING</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ad95b7401d969f2d7a350d70a4298b678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_FROMSTRING</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ad32a2cf4e9a4cf7ebf843ef6f5e4279c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_GETTERCONVERSION</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a9ae707d836858af33e09b1c4359067d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_CLONE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a00c35a946194f6ce1822df55ea3ec9fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_EXISTINGCLASS</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a105edef0919e1e70464f9a1aacaa1a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_DESCRIPTOR</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a2645db0a0c4d0c3f6e2d8591030a5277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_OMITGETVERB</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a81eee9fe516d14b5c2ef1984ba4c65d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_FIELDNAMESUFFIX</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a9c791855ce03b1d264c0f00e1be45b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_BEFORECHANGE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a1444a0b4093eb068e7ff838166990695</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_IMPLEMENTS</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ad21a10a2103efacfd44628d1f55eadd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_NOPACK</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a4c8fca98097e259892da1b4ea214eb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_OWNED</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a4e05bd202dc514ef816545cab33acd11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_EDITABLE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a781985c2138a4f87ae6596c20d6794eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_OVERRIDEGETTER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>af25a8a793436333e12d6942865017f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_OVERRIDESETTER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>afea3c9b6ed791db988ac6787f093a227</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_ENUM</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a11552d569a14794fb34c2089d804647d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_SIZETYPE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>adfa0c9703f250be687966e5d8e06fbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_SETTER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ab1aae88a2150d49c02833d90a15d5434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_GETTER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a4aea0575122b9dcb3c627c6d5edf5180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_GETTERFORUPDATE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a02007b9a35325b6fb4c811c6cb3dcba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_SIZESETTER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a5c40546b9f44859aaf167ea78591ce3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_SIZEGETTER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a6cfef40bf4819255433e43b0d169141e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_INSERTER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a6f82f53d622c3e3de7295539950425ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_ERASER</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>af5e67426832222a0cac9d87a8014777f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_ALLOWREPLACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ae74be65e2ba39cc483d2d78507a7a408</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_STR</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a292ae4dc397ea5d5595dea2c7d25d4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_CUSTOMIZE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>aee0bf4b33e807054de20e880b109a7a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>PROP_OVERWRITEPREVIOUSDEFINITION</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a9a117daee7e773ef28b60ce7210894aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>extractFields</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ae3f1d802520065354a840df0d4d8327e</anchor>
      <arglist>(ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>analyzeClassOrStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a3ac84b24ad6497ed313ee3b4b57c2207</anchor>
      <arglist>(ClassInfo &amp;classInfo, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>analyzeFields</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a00eeef306988627b2826cc72e28a8e57</anchor>
      <arglist>(ClassInfo &amp;classInfo, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>analyzeField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a61a102aa2b16d462fe719f45b933f3f2</anchor>
      <arglist>(ClassInfo &amp;classInfo, FieldInfo *field, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>analyzeInheritedField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a5e54ae21ff1d8f32bf2cbfe52e040358</anchor>
      <arglist>(ClassInfo &amp;classInfo, FieldInfo *field)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>prefixWithNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a67ac281486d8089aed9015d65b1a5cb5</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Properties</type>
      <name>extractProperties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a123a597c4ef3308a41c2f8ccf4df97af</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasSuperclass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ac5c03e9e0786ef5796b3220539a64df8</anchor>
      <arglist>(ClassInfo &amp;classInfo, const std::string &amp;superclassQName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FieldInfo *</type>
      <name>findField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a9c591c9be945619e870da6522839bd35</anchor>
      <arglist>(ClassInfo &amp;classInfo, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>FieldInfo *</type>
      <name>findSuperclassField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a9145a8f11f500b400f68b637f02884e0</anchor>
      <arglist>(ClassInfo &amp;classInfo, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a8dcdfafc0a54f9bdb9bf88081780f38b</anchor>
      <arglist>(const Properties &amp;p, const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>getPropertyAsBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ac1c1a8a65ed2339504d432a9d2b386fa</anchor>
      <arglist>(const Properties &amp;p, const char *name, bool defval)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ac64937f6eb4fff4df6f2e41a68bc4cb5</anchor>
      <arglist>(const Properties &amp;p, const char *name, const std::string &amp;defval=std::string())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>decorateType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a47c3f25a013e23f976cb96e94b1d5157</anchor>
      <arglist>(const std::string &amp;typeName, bool isConst, bool isPointer, bool isRef)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>lookupExistingClassName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>afe0de68ae3a469870191b6080ff1ee0a</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;contextNamespace, ClassInfo *contextClass=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>ad7046f02475eeae2e3a5526f3a9c13e9</anchor>
      <arglist>(const Property &amp;property, const char *usage)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a967b3a864d7d94266c5bd5781c1be1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgTypeTable *</type>
      <name>typeTable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>a6f9d66d06d5d2564521328b0cfd15512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const MsgCompilerOptions &amp;</type>
      <name>opts</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgAnalyzer.html</anchorfile>
      <anchor>aa15cf7ebbf6c1ec2e05da80f8c482a5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCodeGenerator</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::Properties</type>
      <name>Properties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a34a812e1bd750b1b429f2e1594378135</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::FieldInfo</type>
      <name>FieldInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a265a434a3d093f0504063525718d9a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::ClassInfo</type>
      <name>ClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>ab9abe8424ec6048e9073f7c9db3c5390</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::EnumItem</type>
      <name>EnumItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a71e47fbb39d248635bff1fe38ad198df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::EnumInfo</type>
      <name>EnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a0167fc15fae149ec7869c8f53d4f73ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>ab4170869017f1f6ffbb3f83956ebadf9</anchor>
      <arglist>(const char *hFile, const char *ccFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a52c4256ec589c2c88e09b25862227c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a71e12ee697e9ea3f04f3125ee24eb9cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateProlog</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>ac2899c39c9f0efbadad91b7403fd7cfb</anchor>
      <arglist>(const std::string &amp;msgFileName, const std::string &amp;firstNamespace, const std::string &amp;exportDef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateEpilog</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>ae423116302fb4a445d40d7c3e166e38d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>afa18fbfe2ab9917e7a026bf6eedc9e1c</anchor>
      <arglist>(const ClassInfo &amp;classInfo, const std::string &amp;exportDef, const std::string &amp;extraCode=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a4c1d40a8adb151903b9ecd4c686b28d4</anchor>
      <arglist>(const ClassInfo &amp;classInfo, const std::string &amp;exportDef, const std::string &amp;extraCode=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateDescriptorClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>ad887c797dbd21d32ec9d5b5ea4d592d9</anchor>
      <arglist>(const ClassInfo &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a55152723ecafe3d87d6a3ab0de6f77b4</anchor>
      <arglist>(const EnumInfo &amp;enumInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a255c13a0599b64b816bd8176bee58bf4</anchor>
      <arglist>(const std::string &amp;importName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateNamespaceBegin</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a63e8a1577f7cd4c380c15e91b8e575ed</anchor>
      <arglist>(const std::string &amp;namespaceName, bool intoCcFile=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateNamespaceEnd</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a6f3177850c68a77b8f967699e2220a80</anchor>
      <arglist>(const std::string &amp;namespaceName, bool intoCcFile=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTypeAnnouncement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a4106545f3efb237cbbf8ae910a5711ac</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generatePreComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a1e0d536ede2b035e9dc151792b969f72</anchor>
      <arglist>(ASTNode *nedElement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateCplusplusBlock</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>af589eb1e0492ae174eb895e6b785823b</anchor>
      <arglist>(const std::string &amp;target, const std::string &amp;body)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTemplates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a3faec87108c990084b5fb6b51bdf2fc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>prefixWithNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a67ac281486d8089aed9015d65b1a5cb5</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>makeFuncall</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>aedebbffe622037bd643810c5cd8439b8</anchor>
      <arglist>(const std::string &amp;var, const std::string &amp;funcTemplate, bool withIndex=false, const std::string &amp;value=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateClassDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a3fb1ede1f9ec014b1df12aab5cd8e3f7</anchor>
      <arglist>(const ClassInfo &amp;classInfo, const std::string &amp;exportDef, const std::string &amp;extraCode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateClassImpl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a212dccc8b00fa3134c6156b131e94af3</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateStructDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a1eae6bf2c89c771ee85bdd1c741334f9</anchor>
      <arglist>(const ClassInfo &amp;classInfo, const std::string &amp;exportDef, const std::string &amp;extraCode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateStructImpl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>ae782c7e2b735f6a39357925b66c86284</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>hFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a716e6cec536e455eb1693bef0eb3dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>ccFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>aef69590cedecbf8f1b592e8a3591b18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream</type>
      <name>hStream</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a35789490e1e39a8c638c4fdbc63a795f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream</type>
      <name>ccStream</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>a2194600b082837794893b3e72acb175c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>headerGuard</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCodeGenerator.html</anchorfile>
      <anchor>aa89817641696de8e3fa1b9f8109a8108</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCompiler</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCompiler.html</filename>
    <member kind="typedef">
      <type>std::set&lt; std::string &gt;</type>
      <name>StringSet</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ab3141b0267d1a2bb419d5da1b19bbc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::Property</type>
      <name>Property</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>af44c04a6f074ae8c1ca8bbb7255ced30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::Properties</type>
      <name>Properties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a34a812e1bd750b1b429f2e1594378135</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::FieldInfo</type>
      <name>FieldInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a265a434a3d093f0504063525718d9a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::ClassInfo</type>
      <name>ClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ab9abe8424ec6048e9073f7c9db3c5390</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::EnumItem</type>
      <name>EnumItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a71e47fbb39d248635bff1fe38ad198df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MsgTypeTable::EnumInfo</type>
      <name>EnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a0167fc15fae149ec7869c8f53d4f73ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgCompiler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a8fdff82a9c4087b9dcb4bcd8c9836a85</anchor>
      <arglist>(const MsgCompilerOptions &amp;options, ErrorStore *errors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MsgCompiler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ae903fb05025957cfff859267256a5799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a6c1e97d379f3f0aa9890eca0c8690ecd</anchor>
      <arglist>(MsgFileElement *fileElement, const char *hFile, const char *ccFile, StringSet &amp;outImportedFiles)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>importBuiltinDefinitions</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a32c303a0471539e33c1ba18af00fdc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processBuiltinImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>aa15616f3cb76f8b5b0b68e2e9624f6cc</anchor>
      <arglist>(const char *txt, const char *fname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a8379ae5572aa485c6a6f101cdc896dc2</anchor>
      <arglist>(ImportElement *importElem, const std::string &amp;currentDir)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>resolveImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a8a783c1129164224a41a24a66ff818a4</anchor>
      <arglist>(const std::string &amp;importName, const std::string &amp;currentDir)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>collectTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ab9ccff75c02addf51e3b4dfb4c0386e3</anchor>
      <arglist>(MsgFileElement *fileElement, bool isImport)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateCode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a2556d4ab2d0e9589e38a2195a2224939</anchor>
      <arglist>(MsgFileElement *fileElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>prefixWithNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a67ac281486d8089aed9015d65b1a5cb5</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;namespaceName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateNamespaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a0a9fec9e7a4a16d5f315a8a58acc2b34</anchor>
      <arglist>(const std::string &amp;namespaceName, ASTNode *element)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgCompilerOptions</type>
      <name>opts</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ae4db71514dba1db3582a6d7f016c94ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgTypeTable</type>
      <name>typeTable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ad95e611725af0f7e0569c45b12e49747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgAnalyzer</type>
      <name>analyzer</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>adf20505311c4462905f14067002cf2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgCodeGenerator</type>
      <name>codegen</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>ad68edb632528b5911e778e1f400c16e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>used</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>accd366cbfd7b8a1b904ca4177a894f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a967b3a864d7d94266c5bd5781c1be1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringSet</type>
      <name>importsSeen</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a042d8a4f647faf1630b8b4d7faaac2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringSet</type>
      <name>importedFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompiler.html</anchorfile>
      <anchor>a008838b5504912399c750ed0fa813e71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgCompilerOld</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</filename>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::ClassInfo</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld::EnumInfo</class>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOld::TypeDesc</class>
    <member kind="enumeration">
      <type></type>
      <name>ClassType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6ce26a62afab55d7606ad4e92428b30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a840fc36796c5af05b4616165e6449dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONCOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a4783331e736e020d7f37357879036230</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6d6af6ab7649155239023f7cd0014c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COWNEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415accfa25027eb5ed7c03a1cd7795a0dac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CNAMEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415ac2eeee2442ad9eeb51689572331dd046</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6ce26a62afab55d7606ad4e92428b30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a840fc36796c5af05b4616165e6449dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONCOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a4783331e736e020d7f37357879036230</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415a6d6af6ab7649155239023f7cd0014c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COWNEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415accfa25027eb5ed7c03a1cd7795a0dac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CNAMEDOBJECT</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a92f93237c843e4b3fff7b7cc4c80f415ac2eeee2442ad9eeb51689572331dd046</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgCompilerOld</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a7cd0f21d5aaf2b3f46d7aa7532173a01</anchor>
      <arglist>(ErrorStore *errors, const MsgCompilerOptionsOld &amp;options)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MsgCompilerOld</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a907141b72500b7255924464d580e5c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a85feaaec8a08b8f1402965f2f1016d69</anchor>
      <arglist>(MsgFileElement *fileElement, const char *hFile, const char *ccFile)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, TypeDesc &gt;</type>
      <name>TypeDescMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a0e835860e72d3592ed2facd283bfeffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>WordSet</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a338237b024c49f8c507a681367d2668e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>Properties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ac766370bbe71940ffab31f3b2d3c12c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initDescriptors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a63d43797eb0527e99d9ed8f6d564fb43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>prefixWithNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a352d2ad65e340b315754d52271c540af</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>StringVector</type>
      <name>lookupExistingClassName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a86f453300405e25bdcc5f8823d47bf3e</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>StringVector</type>
      <name>lookupExistingEnumName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a53d747b9e09db5fb22d26d72cd1c1251</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isClassDeclared</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>add6454d410155329635fee746ad359cd</anchor>
      <arglist>(const std::string &amp;classqname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addClassType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a0cd4eb18a855ec3bc413284ddb52144f</anchor>
      <arglist>(const std::string &amp;classqname, ClassType type, ASTNode *context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ClassType</type>
      <name>getClassType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aada06d9071f9294d884564c43c4aa556</anchor>
      <arglist>(const std::string &amp;classqname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ClassInfo</type>
      <name>extractClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ad6c04c61ec85c24bfb8c88616d6ef9aa</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>extractClassDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a105dff6864822cc829750f4276791398</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Properties</type>
      <name>extractPropertiesOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a624bca05c9f615d691150cccddaf6ea7</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>prepareFieldForCodeGeneration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a91f35b931463fd026c6264249e463577</anchor>
      <arglist>(ClassInfo &amp;info, ClassInfo::FieldInfo *it)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>prepareForCodeGeneration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a84ef95ca98e1b42d22258d1bee4d3dc4</anchor>
      <arglist>(ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>EnumInfo</type>
      <name>extractEnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aa451316b9c439bfefbeaec230949f6fc</anchor>
      <arglist>(EnumElement *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a0236e25be456b5a655449865c5cb71fd</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ac29e05b56b392725aeaeb4b0d28d2f55</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateDescriptorClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ad887c797dbd21d32ec9d5b5ea4d592d9</anchor>
      <arglist>(const ClassInfo &amp;a)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a55152723ecafe3d87d6a3ab0de6f77b4</anchor>
      <arglist>(const EnumInfo &amp;enumInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateNamespaceBegin</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aa5d0e8a800e0aa7391b77f88fb0efdcf</anchor>
      <arglist>(ASTNode *element)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateNamespaceEnd</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a55ad466bbc83ddf0b571bf97c13b2abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>generatePreComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a1e0d536ede2b035e9dc151792b969f72</anchor>
      <arglist>(ASTNode *nedElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateTemplates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a3faec87108c990084b5fb6b51bdf2fc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>getPropertyAsBool</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ac1c1a8a65ed2339504d432a9d2b386fa</anchor>
      <arglist>(const Properties &amp;p, const char *name, bool defval)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ac64937f6eb4fff4df6f2e41a68bc4cb5</anchor>
      <arglist>(const Properties &amp;p, const char *name, const std::string &amp;defval=std::string())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a02bc2b75aaadbc797d0b4a7a55cb3d76</anchor>
      <arglist>(MsgFileElement *fileElement)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>makeFuncall</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aedebbffe622037bd643810c5cd8439b8</anchor>
      <arglist>(const std::string &amp;var, const std::string &amp;funcTemplate, bool withIndex=false, const std::string &amp;value=&quot;&quot;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TypeDescMap</type>
      <name>PRIMITIVE_TYPES</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a3d34f190c70256ec7e9704faa8a70009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WordSet</type>
      <name>RESERVED_WORDS</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aa3474167d2f0a10c1bf32ebdccd761d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>hFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a716e6cec536e455eb1693bef0eb3dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>ccFilename</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aef69590cedecbf8f1b592e8a3591b18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>hOutp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a88c3324702b0af457da5912865bd065f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>ccOutp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a7bcfe773f2c7d790835585e9e45ce9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ErrorStore *</type>
      <name>errors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a967b3a864d7d94266c5bd5781c1be1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ClassType &gt;</type>
      <name>classType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ae13a9a6c922ef828ee8949217483be09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>enumType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aaa3cc57669bd08a09e50aa6936dbd93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>namespaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>ab6ad09d56120e3b28868679c6bf23393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringVector</type>
      <name>namespaceNameVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a4b8f2d4f2671e52b3048006fcfba706b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgCompilerOptionsOld</type>
      <name>opts</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>a90e1492355b170323399f312bd03cb08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static TypeDesc</type>
      <name>_PRIMITIVE_TYPES</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>aee6055eba70467ff8f5697e5c0a410f0</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>_RESERVED_WORDS</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgCompilerOld.html</anchorfile>
      <anchor>afe85862eb268596781b5ccb13e45bae3</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::MsgCompilerOptions</name>
    <filename>structomnetpp_1_1nedxml_1_1MsgCompilerOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>MsgCompilerOptions</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptions.html</anchorfile>
      <anchor>a6b1b9f838a4e9a58bb2167c581351521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>importPath</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptions.html</anchorfile>
      <anchor>a5b922e7d8301edadecf4b86b55e5fb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>exportDef</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptions.html</anchorfile>
      <anchor>abf7a644b1f098e9a84648b14f15c13c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateClasses</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptions.html</anchorfile>
      <anchor>a15fdae6cef5f1ea694289a2c5da5977c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateDescriptors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptions.html</anchorfile>
      <anchor>aa7ed40e01112e7cfd8df3f2d951efbe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateSettersInDescriptors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptions.html</anchorfile>
      <anchor>a1e2aa372a86a1f92466162453c1e2d1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::MsgCompilerOptionsOld</name>
    <filename>structomnetpp_1_1nedxml_1_1MsgCompilerOptionsOld.html</filename>
    <member kind="function">
      <type></type>
      <name>MsgCompilerOptionsOld</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptionsOld.html</anchorfile>
      <anchor>a7392ffd90b34dc55948c5b037c779581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>exportDef</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptionsOld.html</anchorfile>
      <anchor>abf7a644b1f098e9a84648b14f15c13c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateClasses</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptionsOld.html</anchorfile>
      <anchor>a15fdae6cef5f1ea694289a2c5da5977c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateDescriptors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptionsOld.html</anchorfile>
      <anchor>aa7ed40e01112e7cfd8df3f2d951efbe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateSettersInDescriptors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOptionsOld.html</anchorfile>
      <anchor>a1e2aa372a86a1f92466162453c1e2d1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgGenerator</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>MsgGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ae2aec690d302f4b55d23bccb492a510d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MsgGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a71bdce004f87f1b7f7a2b04732b63623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a5f8ec9305b7fa8b278f778294fc6f040</anchor>
      <arglist>(int indentsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a3714513608ba509b11b71f4808143e69</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a2efbc0f3f8fb4310818a77cb9bd2b8cd</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>aa5ad1ea7a48d2b95fddca24c6d0c1f7a</anchor>
      <arglist>(ASTNode *node, const char *indent, bool islast, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ae8063ee3927c031f780eb6bdf4ec8cd9</anchor>
      <arglist>(ASTNode *node, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a345607889128c50fd95fc6f54782dc56</anchor>
      <arglist>(ASTNode *node, int tagcode, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a9b0f19254d56ab9b14243b622932dd19</anchor>
      <arglist>(ASTNode *node, int tagcodes[], const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgClassOrStructBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a6869f3d6ec2d923a5e92328fb143422d</anchor>
      <arglist>(ASTNode *msgclassorstruct, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a856dd8312fe417b1712de4bfd50298a6</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>aabd30331b303b68b36811150627b65f5</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a50becb23a4a375c9590def19617aea5f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ae3ac699de35d60cec92f68cc69d116d2</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a7bfdab10e2b4afb207277b0075f0675f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a9b5b416dd145059d5949e8fdb058055c</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a8690e3eb6df7804503496f2c6da43a64</anchor>
      <arglist>(MsgFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a2e5f87e6b2add60ae84d5b07d3c72bbb</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *sep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ad4d5eda307ff6e08b27ed8f5146276c5</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *sep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>aa178ef4ab6807b2e959a19d2834d5711</anchor>
      <arglist>(NamespaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCplusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>acf93aac179ca7146af81f0195fd93dcc</anchor>
      <arglist>(CplusplusElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStructDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ae2c5daa4e7f1a63600f435841a718e40</anchor>
      <arglist>(StructDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClassDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a9cae2313fc7a34b89559271c148c5c3a</anchor>
      <arglist>(ClassDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessageDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a351e751b01f1b7899b77265d0c45c234</anchor>
      <arglist>(MessageDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacketDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a9afadbc8a9ebf60adaf780a015f4a7d6</anchor>
      <arglist>(PacketDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a142fc11efc470e20a93f33e69632e8cc</anchor>
      <arglist>(EnumDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a72189cbf3f7f8f600a8a32ca3474b4d5</anchor>
      <arglist>(EnumElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a37b13576ce742a0b1ad010db507c9872</anchor>
      <arglist>(EnumFieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>aa25eb4f192e21ff42bb5d0b5a2d6b598</anchor>
      <arglist>(MessageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacket</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a071c2972bcad9b0400590900d42c3d00</anchor>
      <arglist>(PacketElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a033f6b8804b5ed8f367bde1f9cada0e5</anchor>
      <arglist>(ClassElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a0f1daec7f22349673cc3b6f0caeb6a1a</anchor>
      <arglist>(StructElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a915e5407463ce41a96c6843bcad6d46b</anchor>
      <arglist>(FieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>afd33a69dadf6ef25df919938a66557b2</anchor>
      <arglist>(CommentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>indentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a40b8a14baa3911c5ca691039817abbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a80f6d0cde57478cae3ba9ced197d9b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a856dd8312fe417b1712de4bfd50298a6</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>aabd30331b303b68b36811150627b65f5</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a50becb23a4a375c9590def19617aea5f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ae3ac699de35d60cec92f68cc69d116d2</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a7bfdab10e2b4afb207277b0075f0675f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a9b5b416dd145059d5949e8fdb058055c</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a8690e3eb6df7804503496f2c6da43a64</anchor>
      <arglist>(MsgFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a2e5f87e6b2add60ae84d5b07d3c72bbb</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *sep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ad4d5eda307ff6e08b27ed8f5146276c5</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *sep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>aa178ef4ab6807b2e959a19d2834d5711</anchor>
      <arglist>(NamespaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCplusplus</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>acf93aac179ca7146af81f0195fd93dcc</anchor>
      <arglist>(CplusplusElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStructDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>ae2c5daa4e7f1a63600f435841a718e40</anchor>
      <arglist>(StructDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClassDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a9cae2313fc7a34b89559271c148c5c3a</anchor>
      <arglist>(ClassDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessageDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a351e751b01f1b7899b77265d0c45c234</anchor>
      <arglist>(MessageDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacketDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a9afadbc8a9ebf60adaf780a015f4a7d6</anchor>
      <arglist>(PacketDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a142fc11efc470e20a93f33e69632e8cc</anchor>
      <arglist>(EnumDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a72189cbf3f7f8f600a8a32ca3474b4d5</anchor>
      <arglist>(EnumElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doEnumField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a37b13576ce742a0b1ad010db507c9872</anchor>
      <arglist>(EnumFieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMessage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>aa25eb4f192e21ff42bb5d0b5a2d6b598</anchor>
      <arglist>(MessageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPacket</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a071c2972bcad9b0400590900d42c3d00</anchor>
      <arglist>(PacketElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a033f6b8804b5ed8f367bde1f9cada0e5</anchor>
      <arglist>(ClassElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doStruct</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a0f1daec7f22349673cc3b6f0caeb6a1a</anchor>
      <arglist>(StructElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doField</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>a915e5407463ce41a96c6843bcad6d46b</anchor>
      <arglist>(FieldElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgGenerator.html</anchorfile>
      <anchor>afd33a69dadf6ef25df919938a66557b2</anchor>
      <arglist>(CommentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgParser</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgParser.html</filename>
    <member kind="function">
      <type></type>
      <name>MsgParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>aca005f5a960b8876350afa162551bb9c</anchor>
      <arglist>(ErrorStore *e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MsgParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>ab31bef394374c3f0a09b8c7b546cf868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStoreSource</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>aa1dd1d34c9b703b73e5601ec34362e39</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStoreSourceFlag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>a4c163f481d2a03145eb6b6a558f6cd30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMsgNewSyntaxFlag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>a025a5b38403bc3b3f3dffdcbba51dfa7</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getMsgNewSyntaxFlag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>a0d604bf268c1902dfad006b611611764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>parseMsgFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>ac4a52342549bd7db941ff6a87cee4418</anchor>
      <arglist>(const char *osfname, const char *fname=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>parseMsgText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>a086ccc966ad96a4ea5dcdee62dfdda8c</anchor>
      <arglist>(const char *text, const char *fname=nullptr)</arglist>
    </member>
    <member kind="variable">
      <type>ParseContext</type>
      <name>np</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>aee56caf8e0f33b55e8e351f0a37c2e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>a8e24a79cc6ed4a549e0a11fe4dcd5a44</anchor>
      <arglist>(const char *osfname, const char *fname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>loadText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>a940d084315dd97a71e798eec6f7db6c8</anchor>
      <arglist>(const char *nedtext, const char *fname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>parseMsg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgParser.html</anchorfile>
      <anchor>a529de5fa212f0cb875ecfe8d0617b40d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgTypeTable</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</filename>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::ClassInfo</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::EnumInfo</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::EnumItem</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::FieldInfo</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::Properties</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable::Property</class>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MsgTypeTable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a93d8c9aeed2b12dadb696f1d624251a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MsgTypeTable</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>af3935e20b4d92cf6d0f096682c7a20a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>lookupExistingEnumName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a8b9ad9cd810ed592d79460d83454761d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;contextNamespace)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClassDefined</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a5de3f3c8327122d10916f19223be4d0c</anchor>
      <arglist>(const std::string &amp;classqname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnumDefined</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a23f9ac8cf592236d6b0145834d1b705f</anchor>
      <arglist>(const std::string &amp;enumqname)</arglist>
    </member>
    <member kind="function">
      <type>ClassInfo *</type>
      <name>findClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>ae353b9aba34ec0c97cc40e9723e65c51</anchor>
      <arglist>(const std::string &amp;classqname)</arglist>
    </member>
    <member kind="function">
      <type>ClassInfo &amp;</type>
      <name>getClassInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a872913c2c1f8c2fb4565ed825e35b77d</anchor>
      <arglist>(const std::string &amp;classqname)</arglist>
    </member>
    <member kind="function">
      <type>const EnumInfo &amp;</type>
      <name>getEnumInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a693ea52a55c826040b624e1473794b00</anchor>
      <arglist>(const std::string &amp;qname)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getGlobalProperties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a7f297afdb12f9ffa34c6ce08577a0811</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeMsgFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a3f87a6b8f5f403bb60dd5854af3fa1ea</anchor>
      <arglist>(ASTNode *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGlobalProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>afa5ccb83348ed3713214f8aae208ef3f</anchor>
      <arglist>(const Property &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClass</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a3a3c4d43bd63bd791ff2bb1d2b010de3</anchor>
      <arglist>(const ClassInfo &amp;classInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEnum</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>aebdcce5beeb8e4917dd69cb89fd2eb5c</anchor>
      <arglist>(const EnumInfo &amp;enumInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initDescriptors</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a63d43797eb0527e99d9ed8f6d564fb43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>prefixWithNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable.html</anchorfile>
      <anchor>a1a57ac9d515f7db788346390058ac691</anchor>
      <arglist>(const std::string &amp;namespaceName, const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedCrossValidator</name>
    <filename>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</filename>
    <member kind="function">
      <type></type>
      <name>NedCrossValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ab5e407d7700337c45af172939d14c9a3</anchor>
      <arglist>(bool parsedExpr, NedResourceCache *resolver, ErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NedCrossValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a8531c7b4fda2f43463e2e275968b3e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>findChildWithTagAndAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a469ef1f381d086d25999774e57b64443</anchor>
      <arglist>(ASTNode *node, int tag, const char *attr, const char *value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a08a612d37350fc24aec23e8ecae4df54</anchor>
      <arglist>(GateElement *gate, bool hasGateIndex, bool isInput, ASTNode *conn, bool isSrcGate)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateConnGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aea075fc46fa70629d0ce9c6c31a8e2a5</anchor>
      <arglist>(const char *submodName, bool hasSubmodIndex, const char *gateName, bool hasGateIndex, ASTNode *parent, ASTNode *conn, bool isSrc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>getXXXDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a4ba71d54d1bdce523cc9dcc05c8c6897</anchor>
      <arglist>(const char *name, int tagcode1, int tagcode2=-1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>getModuleDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>af6cea3109f7ab70836b983a0f1648ead</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>getChannelDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a1ee3ec0e31e377fc328ee222148a9af0</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>getModuleInterfaceDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a90e5e36e7988d441f8afbf4833b423cc</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>getChannelInterfaceDeclaration</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ad6ae41e5bb542eeb82a36616830c79f3</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>parsedExpressions</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>abb96d92f13ef9ef2075b9ae524defa25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NedResourceCache *</type>
      <name>resolver</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aca23e1f1ff3e145e494c5ccc1695f96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ASTNode *</type>
      <name>moduleTypeDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a7d7edd03bcca2c4bd702f0d01a82334b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedCrossValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedException</name>
    <filename>classomnetpp_1_1nedxml_1_1NedException.html</filename>
    <member kind="function">
      <type></type>
      <name>NedException</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedException.html</anchorfile>
      <anchor>ace177fed9d19e8b9c44932ac475902ff</anchor>
      <arglist>(const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NedException</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedException.html</anchorfile>
      <anchor>a393333f221df8baca318a2bb7c61952c</anchor>
      <arglist>(ASTNode *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NedException</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedException.html</anchorfile>
      <anchor>a13329be2d89078275ec270976d8435fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedException.html</anchorfile>
      <anchor>ae26e1f71562f0ec85aa1d3fa735da3da</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>msg</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedException.html</anchorfile>
      <anchor>a30c3e2a6148eb3534efc9e78020a8da8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedGenerator</name>
    <filename>classomnetpp_1_1nedxml_1_1NedGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>NedGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>af7e591a8f87c2b1e6120ee039ddcfc16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NedGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a89bf51f44d4f3cd4fca2d5999760f9a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a5f8ec9305b7fa8b278f778294fc6f040</anchor>
      <arglist>(int indentsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a3714513608ba509b11b71f4808143e69</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a2efbc0f3f8fb4310818a77cb9bd2b8cd</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateNedItem</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a0f1e09405ad9d1ac6e4e585c2d627894</anchor>
      <arglist>(ASTNode *node, const char *indent, bool islast, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildren</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ae8063ee3927c031f780eb6bdf4ec8cd9</anchor>
      <arglist>(ASTNode *node, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a345607889128c50fd95fc6f54782dc56</anchor>
      <arglist>(ASTNode *node, int tagcode, const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateChildrenWithTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a9b0f19254d56ab9b14243b622932dd19</anchor>
      <arglist>(ASTNode *node, int tagcodes[], const char *indent, const char *arg=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printInheritance</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a4133a7f04abb852a27295f02f1b7a272</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a847ab483843836ffd56a2a1914982723</anchor>
      <arglist>(ASTNode *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>af36f31befb12f3b8afadf1c80ea2dc5c</anchor>
      <arglist>(ASTNode *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOptVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a90083009e08bad53b3ba9dc811fa6abd</anchor>
      <arglist>(ASTNode *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgClassOrStructBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a6869f3d6ec2d923a5e92328fb143422d</anchor>
      <arglist>(ASTNode *msgclassorstruct, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a856dd8312fe417b1712de4bfd50298a6</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aabd30331b303b68b36811150627b65f5</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a50becb23a4a375c9590def19617aea5f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ae3ac699de35d60cec92f68cc69d116d2</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a7bfdab10e2b4afb207277b0075f0675f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a9b5b416dd145059d5949e8fdb058055c</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ab2a69c701b51f7b4c416a38e633bc07f</anchor>
      <arglist>(NedFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPackage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ac1c1a504ddccab604e696ea4c3f7cffa</anchor>
      <arglist>(PackageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ab5f7dd5216681a101d7ecb59505dcb64</anchor>
      <arglist>(PropertyDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExtends</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aaf43bb567ef050ec40844f5974c290ae</anchor>
      <arglist>(ExtendsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aa07169a1f399554d411c269781457441</anchor>
      <arglist>(InterfaceNameElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSimpleModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a3ef9fab6051dbe83fe87c705e2979569</anchor>
      <arglist>(SimpleModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ae4e9d30b3ba18a90b7299d19c5b0855f</anchor>
      <arglist>(ModuleInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCompoundModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a38535955ddfff062dc19c1b95767bf4c</anchor>
      <arglist>(CompoundModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a30c01e6d096f45dee3aa8528483afe64</anchor>
      <arglist>(ChannelInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannel</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a1e32c233025542564b8aa4b3a0b0e60e</anchor>
      <arglist>(ChannelElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a05c04dd0e2c193664e214d9fb7e30079</anchor>
      <arglist>(ParametersElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a108f9777097a1d9e7326bef12c2c4e5e</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ac1442087ea16e717a89dedffb6dd4ce8</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>af85f2874d59faa4723dddced0d2f49df</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a5ff043c3f4939cb4c793c3613d8b2934</anchor>
      <arglist>(GatesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a4a7c9ad86badff4f7e87e3341b834949</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a029b5ccb62a24b584526264e29ad4705</anchor>
      <arglist>(TypesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodules</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ae509c51c6a89926bad94dd97a35de395</anchor>
      <arglist>(SubmodulesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a90e772e43701b522c3d0ddd79e8595a4</anchor>
      <arglist>(SubmoduleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnections</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aaecbfb7fee934e59dfaf1e9be5e36194</anchor>
      <arglist>(ConnectionsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>acb64d005fde4f879c8abce6c54809a5e</anchor>
      <arglist>(ConnectionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionGroup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aff3796f7dfa78f118fd9f9ae237068cf</anchor>
      <arglist>(ConnectionGroupElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLoop</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ab5934a0f21c371ac00c7867061977d00</anchor>
      <arglist>(LoopElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a8f9ae15a2bbe63b712a5ce5d81614dd1</anchor>
      <arglist>(ConditionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printConnectionGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a35ec0232f7183b97f37530c7dd8bc627</anchor>
      <arglist>(ASTNode *conn, const char *modname, const char *modindexattr, const char *gatename, const char *gateindexattr, bool isplusplus, int gatesubg, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>afa26d3d96368a44684bf186de370d2c2</anchor>
      <arglist>(ExpressionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getOperatorPrecedence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a1a6d37217825f7dc8f15d17dfab9dbd1</anchor>
      <arglist>(const char *op, int args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isOperatorLeftAssoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a0dcd932ece44c8afc5dc2915e0c6e871</anchor>
      <arglist>(const char *op)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doOperator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>acc22b8992e4ba9f085ea2c9c5b89c60b</anchor>
      <arglist>(OperatorElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFunction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a2b4551a0023187e3a10aa77dfe0a70a2</anchor>
      <arglist>(FunctionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doIdent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ad10e21014a4fd50799664a384e379847</anchor>
      <arglist>(IdentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>afd33a69dadf6ef25df919938a66557b2</anchor>
      <arglist>(CommentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>indentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a40b8a14baa3911c5ca691039817abbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>outp</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a80f6d0cde57478cae3ba9ced197d9b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>increaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a7e2b0afce83ddb855b79b435c911f631</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>decreaseIndent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a74546d79e4c10040a69af22a0d695c2f</anchor>
      <arglist>(const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printInheritance</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a4133a7f04abb852a27295f02f1b7a272</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>hasExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a847ab483843836ffd56a2a1914982723</anchor>
      <arglist>(ASTNode *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>af36f31befb12f3b8afadf1c80ea2dc5c</anchor>
      <arglist>(ASTNode *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOptVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a90083009e08bad53b3ba9dc811fa6abd</anchor>
      <arglist>(ASTNode *node, const char *attr, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doMsgClassOrStructBody</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a6869f3d6ec2d923a5e92328fb143422d</anchor>
      <arglist>(ASTNode *msgclassorstruct, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>concatInnerComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a856dd8312fe417b1712de4bfd50298a6</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aabd30331b303b68b36811150627b65f5</anchor>
      <arglist>(ASTNode *node, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a50becb23a4a375c9590def19617aea5f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getInlineRightComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ae3ac699de35d60cec92f68cc69d116d2</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a7bfdab10e2b4afb207277b0075f0675f</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a9b5b416dd145059d5949e8fdb058055c</anchor>
      <arglist>(FilesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ab2a69c701b51f7b4c416a38e633bc07f</anchor>
      <arglist>(NedFileElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPackage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ac1c1a504ddccab604e696ea4c3f7cffa</anchor>
      <arglist>(PackageElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a338645e70bb1395daf073c78ddb13b22</anchor>
      <arglist>(ImportElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ab5f7dd5216681a101d7ecb59505dcb64</anchor>
      <arglist>(PropertyDeclElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExtends</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aaf43bb567ef050ec40844f5974c290ae</anchor>
      <arglist>(ExtendsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aa07169a1f399554d411c269781457441</anchor>
      <arglist>(InterfaceNameElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSimpleModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a3ef9fab6051dbe83fe87c705e2979569</anchor>
      <arglist>(SimpleModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doModuleInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ae4e9d30b3ba18a90b7299d19c5b0855f</anchor>
      <arglist>(ModuleInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCompoundModule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a38535955ddfff062dc19c1b95767bf4c</anchor>
      <arglist>(CompoundModuleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannelInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a30c01e6d096f45dee3aa8528483afe64</anchor>
      <arglist>(ChannelInterfaceElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doChannel</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a1e32c233025542564b8aa4b3a0b0e60e</anchor>
      <arglist>(ChannelElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParameters</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a05c04dd0e2c193664e214d9fb7e30079</anchor>
      <arglist>(ParametersElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParam</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a108f9777097a1d9e7326bef12c2c4e5e</anchor>
      <arglist>(ParamElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ac1442087ea16e717a89dedffb6dd4ce8</anchor>
      <arglist>(PropertyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doPropertyKey</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>af85f2874d59faa4723dddced0d2f49df</anchor>
      <arglist>(PropertyKeyElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGates</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a5ff043c3f4939cb4c793c3613d8b2934</anchor>
      <arglist>(GatesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a4a7c9ad86badff4f7e87e3341b834949</anchor>
      <arglist>(GateElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a029b5ccb62a24b584526264e29ad4705</anchor>
      <arglist>(TypesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodules</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ae509c51c6a89926bad94dd97a35de395</anchor>
      <arglist>(SubmodulesElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doSubmodule</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a90e772e43701b522c3d0ddd79e8595a4</anchor>
      <arglist>(SubmoduleElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnections</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aaecbfb7fee934e59dfaf1e9be5e36194</anchor>
      <arglist>(ConnectionsElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>acb64d005fde4f879c8abce6c54809a5e</anchor>
      <arglist>(ConnectionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doConnectionGroup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>aff3796f7dfa78f118fd9f9ae237068cf</anchor>
      <arglist>(ConnectionGroupElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLoop</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ab5934a0f21c371ac00c7867061977d00</anchor>
      <arglist>(LoopElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doCondition</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a8f9ae15a2bbe63b712a5ce5d81614dd1</anchor>
      <arglist>(ConditionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printConnectionGate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a35ec0232f7183b97f37530c7dd8bc627</anchor>
      <arglist>(ASTNode *conn, const char *modname, const char *modindexattr, const char *gatename, const char *gateindexattr, bool isplusplus, int gatesubg, const char *indent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>afa26d3d96368a44684bf186de370d2c2</anchor>
      <arglist>(ExpressionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getOperatorPrecedence</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a1a6d37217825f7dc8f15d17dfab9dbd1</anchor>
      <arglist>(const char *op, int args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isOperatorLeftAssoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a0dcd932ece44c8afc5dc2915e0c6e871</anchor>
      <arglist>(const char *op)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doOperator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>acc22b8992e4ba9f085ea2c9c5b89c60b</anchor>
      <arglist>(OperatorElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doFunction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a2b4551a0023187e3a10aa77dfe0a70a2</anchor>
      <arglist>(FunctionElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doIdent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>ad10e21014a4fd50799664a384e379847</anchor>
      <arglist>(IdentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doLiteral</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>a57855ee5bc0951aa98c29c92d74f09b9</anchor>
      <arglist>(LiteralElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedGenerator.html</anchorfile>
      <anchor>afd33a69dadf6ef25df919938a66557b2</anchor>
      <arglist>(CommentElement *node, const char *indent, bool islast, const char *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::NedLookupContext</name>
    <filename>structomnetpp_1_1nedxml_1_1NedLookupContext.html</filename>
    <member kind="function">
      <type></type>
      <name>NedLookupContext</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NedLookupContext.html</anchorfile>
      <anchor>a0375e0b485c1a453751591b83e70a65c</anchor>
      <arglist>(ASTNode *e, const char *q)</arglist>
    </member>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>element</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NedLookupContext.html</anchorfile>
      <anchor>a38bd8bff98ccdb0888ecfa2757ff93f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>qname</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NedLookupContext.html</anchorfile>
      <anchor>af9d3de1f7f9ff554ce07ad3fcfa22162</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedParser</name>
    <filename>classomnetpp_1_1nedxml_1_1NedParser.html</filename>
    <member kind="function">
      <type></type>
      <name>NedParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>ad15f147554fbaec552859321acb14ac8</anchor>
      <arglist>(ErrorStore *e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NedParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>aa61be0b4237af0749f35e21710373fe6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParseExpressions</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a70d7a4419213a3961e050f5e567b85cc</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStoreSource</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>aa1dd1d34c9b703b73e5601ec34362e39</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getParseExpressionsFlag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a6f3654bd21bc6a71b2d92d9dfb5d03cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStoreSourceFlag</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a4c163f481d2a03145eb6b6a558f6cd30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>parseNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a1faaa9751dc3836a4c4bfa1514660c0b</anchor>
      <arglist>(const char *osfname, const char *fname=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>parseNedText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a26361d73c7ca93b69e5bb51f07c373ed</anchor>
      <arglist>(const char *nedtext, const char *fname=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>parseNedExpression</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>ad756ddbcc1256bd57bd9d957880c2fd9</anchor>
      <arglist>(const char *nedexpression)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getBuiltInDeclarations</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a98bff2eab7161defa20976806b9be1e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ParseContext</type>
      <name>np</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>aee56caf8e0f33b55e8e351f0a37c2e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a8e24a79cc6ed4a549e0a11fe4dcd5a44</anchor>
      <arglist>(const char *osfname, const char *fname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>loadText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a940d084315dd97a71e798eec6f7db6c8</anchor>
      <arglist>(const char *nedtext, const char *fname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ASTNode *</type>
      <name>parseNed</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedParser.html</anchorfile>
      <anchor>a2e85b7531bfbe6dde94bc608d2f8b49e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedResourceCache</name>
    <filename>classomnetpp_1_1nedxml_1_1NedResourceCache.html</filename>
    <class kind="class">omnetpp::nedxml::NedResourceCache::CachedTypeNames</class>
    <class kind="class">omnetpp::nedxml::NedResourceCache::INedTypeNames</class>
    <class kind="struct">omnetpp::nedxml::NedResourceCache::PendingNedType</class>
    <member kind="function">
      <type></type>
      <name>NedResourceCache</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a7d5b3a357f757980d5e2fc5e1662cf3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NedResourceCache</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>af296a3d3339590d12cdaa3d6e37b7d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>loadNedSourceFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a7102a7ba0003c09ca98ef3c8903a36c5</anchor>
      <arglist>(const char *foldername)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>afe90062a27aa54248ced363d020ec6fe</anchor>
      <arglist>(const char *nedfname, const char *expectedPackage, bool isXML)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNedText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a3689a702755496061dab4a992191f0e5</anchor>
      <arglist>(const char *name, const char *nedtext, const char *expectedPackage, bool isXML)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doneLoadingNedFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>aef40a6225528aec71dc2397860c6b5af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ac420b09cd74e2406e85bb683b9922def</anchor>
      <arglist>(const char *fname, ASTNode *node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a5e26d54a2e97aa2b5d02c3b34101f568</anchor>
      <arglist>(const char *fname) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedFileElement *</type>
      <name>getParentPackageNedFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a468f001797ad5d4f01ddb4a515ccc5af</anchor>
      <arglist>(NedFileElement *nedfile) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedTypeInfo *</type>
      <name>lookup</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a35624edfb9d47a2c40a477dc212e9ac3</anchor>
      <arglist>(const char *qname) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedTypeInfo *</type>
      <name>getDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ad17c691357e5ea6e921d77b0a4f29a32</anchor>
      <arglist>(const char *qname) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>resolveNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>aff838b150be43682782d598193f3c546</anchor>
      <arglist>(const NedLookupContext &amp;context, const char *nedtypename, INedTypeNames *qnames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>resolveNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a833c4fb832040c4baa0d3673ceed255b</anchor>
      <arglist>(const NedLookupContext &amp;context, const char *nedtypename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; std::string &gt; &amp;</type>
      <name>getTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ad2ef2173bceb757a4af350d3a50d6221</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getNedPackageForFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>afe2fd28f246185ac22dac91dc7e076fa</anchor>
      <arglist>(const char *folder) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NedLookupContext</type>
      <name>getParentContextOf</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a0421913e9d31d65ac34842cd1cdb5093</anchor>
      <arglist>(const char *qname, ASTNode *node)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, ASTNode * &gt;</type>
      <name>NedFileMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a71340cc025e3d01c9f9c30336be18dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, NedTypeInfo * &gt;</type>
      <name>NedTypeInfoMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a2198ce79bd3e82354349d013c6349bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>StringMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a09af799878f7f9f2af8b7133bc151874</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>registerBuiltinDeclarations</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a87621336039da0838884e1ceee985546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>doLoadNedSourceFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a7563634de213fca8bd564d0cf905ebad</anchor>
      <arglist>(const char *foldername, const char *expectedPackage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doLoadNedFileOrText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a8138bd90a35fd21e196e1ad0f08a413d</anchor>
      <arglist>(const char *nedfname, const char *nedtext, const char *expectedPackage, bool isXML)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>parseAndValidateNedFileOrText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a08782f1d6b599e462b675e4b3cc5e72a</anchor>
      <arglist>(const char *nedfname, const char *nedtext, bool isXML)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>determineRootPackageName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a4e70fbb03360a1b3dc94fcdd66e0a388</anchor>
      <arglist>(const char *nedSourceFolderName)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getNedSourceFolderForFolder</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a051fb2d15ef8132de20650f53c9213c8</anchor>
      <arglist>(const char *folder) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>collectNedTypesFrom</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a04e575b527480892df581a7182bdf92d</anchor>
      <arglist>(ASTNode *node, const std::string &amp;packagePrefix, bool areInnerTypes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>collectNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ab29b2e17e91bab0e49c676f0af0573f9</anchor>
      <arglist>(const char *qname, bool isInnerType, ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>areDependenciesResolved</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>aff48718bbd5594eb5897188336292d14</anchor>
      <arglist>(const char *qname, ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>registerPendingNedTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a01628e3e79ab131be01784ea0ecb5490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>registerNedType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ad75bf530cdbe2bcbaa969ec43bf59367</anchor>
      <arglist>(const char *qname, bool isInnerType, ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getFirstError</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ab2a70592b01fd55b5338f427328ce1b3</anchor>
      <arglist>(ErrorStore *errors, const char *prefix=nullptr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NedFileMap</type>
      <name>files</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ab77ddf13c638e41d395af11717d520d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NedTypeInfoMap</type>
      <name>nedTypes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>aa8acece351c9d40b405e1cc4ef2b1f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>nedTypeNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a369311ac297a2534a5a80599bd7e2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringMap</type>
      <name>folderPackages</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>a5144b39c8dd866c5ba1f4ec4eceee02d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PendingNedType &gt;</type>
      <name>pendingList</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedResourceCache.html</anchorfile>
      <anchor>ae38fef7d3945d874f4efe897df001646</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedSyntaxValidator</name>
    <filename>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</filename>
    <member kind="function">
      <type></type>
      <name>NedSyntaxValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ad4929244ae768969dd9e9c04baa5a6d9</anchor>
      <arglist>(bool parsedExpr, ErrorStore *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NedSyntaxValidator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ac654d77682aa7b6289caec131c94f530</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkExpressionAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a588984d715df4398c1efa69b8c9276e8</anchor>
      <arglist>(ASTNode *node, const char *attrs[], bool optional[], int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkEnumAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ab688bc48f26c676dbbc8c4b9440f0e02</anchor>
      <arglist>(ASTNode *node, const char *attr, const char *values[], int n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkDottedNameAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ae5a4775f24421c1b434338ba05aa8319</anchor>
      <arglist>(ASTNode *node, const char *attr, bool wildcardsAllowed)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkPropertyNameAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a2a8e54d716177a9b26e3b039b88ec815</anchor>
      <arglist>(ASTNode *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkPropertyIndexAttribute</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa8e7652001258492aa79a6f65e5e42d7</anchor>
      <arglist>(ASTNode *node, const char *attr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isWithinSubcomponent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa011bc65456a7971a8d61ee4d93e4a47</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isWithinInnerType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a997ab8ce8d3970a5a697c9581b9ac4b4</anchor>
      <arglist>(ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ab8a30e06ac169e1c8461e799c6df0817</anchor>
      <arglist>(PackageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>parsedExpressions</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>abb96d92f13ef9ef2075b9ae524defa25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ac69ceab0eb3eaa966356eb4e77fd959c</anchor>
      <arglist>(FilesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a3adda6277c4d00e908840cdbfd88b8b9</anchor>
      <arglist>(NedFileElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a19173d90df9653d69d7e52c80a812cfe</anchor>
      <arglist>(CommentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ab8a30e06ac169e1c8461e799c6df0817</anchor>
      <arglist>(PackageElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a5d0ea44504a4e7f63f41bf0387a3674d</anchor>
      <arglist>(ImportElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ab49fb3f0c7cb26bd5834a1ffc8d8e012</anchor>
      <arglist>(PropertyDeclElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a8a5ba2c88d9ea490c41a559481203db8</anchor>
      <arglist>(ExtendsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a7942266c9020f9db27b35b37acbf8909</anchor>
      <arglist>(InterfaceNameElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a441d2130da07da3cac23bfb3981cb6af</anchor>
      <arglist>(SimpleModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>add7d436c831301f43146bf6d15a9d26d</anchor>
      <arglist>(ModuleInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a73314328bd514966f1675cced10299bf</anchor>
      <arglist>(CompoundModuleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa38f985e635c22bead530847a96e643a</anchor>
      <arglist>(ChannelInterfaceElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a20688c332ebe6e267f97a93d6e5e31d2</anchor>
      <arglist>(ChannelElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>af3fe8e86b9c87fcb4bf6ad59e577f6af</anchor>
      <arglist>(ParametersElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>af0ffb0a13ccd16559b8165b9c0655d4d</anchor>
      <arglist>(ParamElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a0aa35e59ccaf77f2f5a2b88f04309684</anchor>
      <arglist>(PropertyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a16d31410dc043605e5ff6d5158d56338</anchor>
      <arglist>(PropertyKeyElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ab99c9f82c75f0d49ac0a9ee5c6ec724a</anchor>
      <arglist>(GatesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a3219649d672038d08b53612558ab53b5</anchor>
      <arglist>(GateElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>af9d6658db77c682a3a2545b6034212f1</anchor>
      <arglist>(TypesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a77ae3bd92a9bc0c2925d82fc95692fe7</anchor>
      <arglist>(SubmodulesElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a98d1902babb4293b8279facec9537540</anchor>
      <arglist>(SubmoduleElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a294695ec8c09032db29ea88556ba8169</anchor>
      <arglist>(ConnectionsElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a775145e417a6bcbb162ee843aeb5d375</anchor>
      <arglist>(ConnectionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a331758bf4a976f16821d6c30b06bf198</anchor>
      <arglist>(ConnectionGroupElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa86ec2cb64aefa9e94fe6b98ba365740</anchor>
      <arglist>(LoopElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aa3a613fcc899b8ae906da3d27c2749d9</anchor>
      <arglist>(ConditionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>a3b49f03454a7e033ea507bbb6dca5fec</anchor>
      <arglist>(ExpressionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ade5b421437ee403a2d8f8773dfe68e94</anchor>
      <arglist>(OperatorElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aea25958be1c8167fd43714e0f90fcbaa</anchor>
      <arglist>(FunctionElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ade85aa34cdf4f65441ccc4e32627c6ee</anchor>
      <arglist>(IdentElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>ac4f3d1ef1ac4dd3428c675291e77fd7a</anchor>
      <arglist>(LiteralElement *node) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedSyntaxValidator.html</anchorfile>
      <anchor>aaa66924db2a520ec2aca54b83a1218bf</anchor>
      <arglist>(UnknownElement *node) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedTools</name>
    <filename>classomnetpp_1_1nedxml_1_1NedTools.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>repairNedAST</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTools.html</anchorfile>
      <anchor>a5d0c5fd85bf82a300a0a9f41fe45a94a</anchor>
      <arglist>(ASTNode *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>repairMsgAST</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTools.html</anchorfile>
      <anchor>a2199f63a1b18032104b0235972189c5c</anchor>
      <arglist>(ASTNode *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>splitNedFiles</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTools.html</anchorfile>
      <anchor>a3d05cf2d15fc97c6cf69cfd35dae60a4</anchor>
      <arglist>(FilesElement *tree)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::NedTypeInfo</name>
    <filename>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIMPLE_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a7e811e6a2ecdbdb3e43cef078b1fac4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPOUND_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a1b7e373f259e2901b83809b06669bf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODULEINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a87403ce68d4fdd23b10a8795ba42175a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNEL</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7ad9d3e3b5dc628d73e5ec4da418f2a6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNELINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a372ad21d19dcd54dc6fadc4077223948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIMPLE_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a7e811e6a2ecdbdb3e43cef078b1fac4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPOUND_MODULE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a1b7e373f259e2901b83809b06669bf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODULEINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a87403ce68d4fdd23b10a8795ba42175a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNEL</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7ad9d3e3b5dc628d73e5ec4da418f2a6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANNELINTERFACE</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a372ad21d19dcd54dc6fadc4077223948</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NedTypeInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a47baaacee65c4e75985a5227101fa820</anchor>
      <arglist>(NedResourceCache *resolver, const char *qname, bool isInnerType, ASTNode *tree)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NedTypeInfo</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a6729f03d65e13374b65c508d02f20c38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a2ab4ce45db41bdd5911d4dc95286c592</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getFullName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ad09dd3b786efac794467023670cda227</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ASTNode *</type>
      <name>getTree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a3c39c4c17edd3fd07fd5aacec02bb2a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NedResourceCache *</type>
      <name>getResolver</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a04820fa80a1c9945cc54c9a0c04da2c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Type</type>
      <name>getType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>acb8d1fea1aae0a46217608e36f256edc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getSourceFileName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a15b03f18201c930d299c187f687c82f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getPackage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ad4bf7313b276fd53ff3bb8253d8b5c93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>str</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a9bb39f105e156b9211b189d47f120bdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getNedSource</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aaa835fbe2e9bc1558fb1f559df3dbcc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numExtendsNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ac2b0e7b8ac4966dfc5adeff8df443100</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getExtendsName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a437abadea698f94b106de3f3311d40a6</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numInterfaceNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>af5db6cbf2193b6b14a81a72919de94bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getInterfaceName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a4de80abd5fc3b1b7572dbabd0f29302a</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>supportsInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a31af9eaf2cb6e12300a90358c7f64f69</anchor>
      <arglist>(const char *qname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInnerType</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aed89ed6d198e956de59afe65b06cb712</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getEnclosingTypeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ae2ff58ad0f60f97ba4a5c28c4b235b43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNetwork</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a61c3d07794a820b76b8cb90ea8fba4df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getImplementationClassName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a7bdd34d282189d2b3c34e2a36891b5e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getPackageProperty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a507cd6748d171f8004f1556cfa5ce2bc</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getCxxNamespace</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a77706cbe4acffd9c7ec624b9e4b6c2f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NedTypeInfo *</type>
      <name>getSuperDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ae24c822ca0cc35052c820f7602342328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TypesElement *</type>
      <name>getTypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a23a67adb9a405646547086aebe108913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParametersElement *</type>
      <name>getParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a38d0c3ee8bca4acf9fa370bd074bd2f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GatesElement *</type>
      <name>getGatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1e755527f974d3f720ff610d59f5e264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubmodulesElement *</type>
      <name>getSubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a3e1c057a7564ba05a526a89f96213150</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionsElement *</type>
      <name>getConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a69213e5b4ccf559da6c83c8734c2891a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getLocalSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aa8298fd31df44e9189ee4f80a0fc72d7</anchor>
      <arglist>(const char *submoduleName) const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getLocalConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aa1b8dd60ee94b067baa52254863ec3d5</anchor>
      <arglist>(long id) const</arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aac958826609a64e5a97884e7ffc47bb9</anchor>
      <arglist>(const char *submoduleName) const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aa9b5ea72258cdc08b09b548d7ca9c555</anchor>
      <arglist>(long id) const</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findLocalParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a906d4fa521583e68ac93b3042aecc71c</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aeea15c2f9c65f38e7bd371c37848f8a8</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findLocalGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a32bb6773b5ec0d723eaabcee1a6683bd</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a92ed401b4a8b7872461296b1a81d8518</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>StringVector</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ab8e1ede88e2ff1c3b448334e6cbd3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, ASTNode * &gt;</type>
      <name>NameToElementMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a40d583e7e104d7c9eea1aa124dc5d971</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkComplianceToInterface</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aa06a37c50982eff3c6946b21ee4b6dd3</anchor>
      <arglist>(NedTypeInfo *interfaceDecl)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>collectLocalDeclarations</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>af347594709e83cbec786d6ee876d677d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addToElementMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ae9afaa7fe89aca6de2e9c0cd245fe662</anchor>
      <arglist>(NameToElementMap &amp;elementMap, ASTNode *node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mergeElementMap</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ab4936eb760cb84dd2d1f1963c22413b3</anchor>
      <arglist>(NameToElementMap &amp;destMap, const NameToElementMap &amp;elementMap)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NedResourceCache *</type>
      <name>resolver</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aca23e1f1ff3e145e494c5ccc1695f96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ab6f4e6d3fde00ce906e46494f60dfe7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>qualifiedName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ae3b073d6fb7946c7b34818d9238c410d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isInner</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a00356f2422f9b133b4a7ea25f74abaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ASTNode *</type>
      <name>tree</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a51e9cc10a0e45af8ecd0166f4f68dd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringVector</type>
      <name>extendsNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ab96f8893e6dabd377ae7580edee5bba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StringVector</type>
      <name>interfaceNames</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a4ddb3aa4285d4ef2dab5d84f2d3be12d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>enclosingTypeName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a12a9d7e0b0afa670a650f6998eb8c4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>implClassName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a0bbef31a11570fa3b90465acb44b783b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameToElementMap</type>
      <name>localInnerTypeDecls</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a39b42d9fc2bc136a62faf60e039a5409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameToElementMap</type>
      <name>localParamDecls</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a4d94144ac6abad508b79eb648bcf1eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameToElementMap</type>
      <name>localGateDecls</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a3792fa5b4a7fdf840722d81b0840698e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameToElementMap</type>
      <name>localSubmoduleDecls</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aab12ad811d2f00762ad740c6ff6abbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameToElementMap</type>
      <name>localConnectionDecls</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a2b2ac3f8ddafe2e3760b83adc243245f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameToElementMap</type>
      <name>allLocalDecls</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>ac464aeb38970e6171cbec70cc1412ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TypesElement *</type>
      <name>getTypesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a23a67adb9a405646547086aebe108913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParametersElement *</type>
      <name>getParametersElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a38d0c3ee8bca4acf9fa370bd074bd2f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GatesElement *</type>
      <name>getGatesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a1e755527f974d3f720ff610d59f5e264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubmodulesElement *</type>
      <name>getSubmodulesElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a3e1c057a7564ba05a526a89f96213150</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionsElement *</type>
      <name>getConnectionsElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a69213e5b4ccf559da6c83c8734c2891a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getLocalSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aa8298fd31df44e9189ee4f80a0fc72d7</anchor>
      <arglist>(const char *submoduleName) const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getLocalConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aa1b8dd60ee94b067baa52254863ec3d5</anchor>
      <arglist>(long id) const</arglist>
    </member>
    <member kind="function">
      <type>SubmoduleElement *</type>
      <name>getSubmoduleElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aac958826609a64e5a97884e7ffc47bb9</anchor>
      <arglist>(const char *submoduleName) const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionElement *</type>
      <name>getConnectionElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aa9b5ea72258cdc08b09b548d7ca9c555</anchor>
      <arglist>(long id) const</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findLocalParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a906d4fa521583e68ac93b3042aecc71c</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>findParamDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>aeea15c2f9c65f38e7bd371c37848f8a8</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findLocalGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a32bb6773b5ec0d723eaabcee1a6683bd</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>findGateDecl</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1NedTypeInfo.html</anchorfile>
      <anchor>a92ed401b4a8b7872461296b1a81d8518</anchor>
      <arglist>(const char *name) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::ParseContext</name>
    <filename>structomnetpp_1_1nedxml_1_1ParseContext.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>getParseExpressionsFlag</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a6f3654bd21bc6a71b2d92d9dfb5d03cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStoreSourceFlag</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a4c163f481d2a03145eb6b6a558f6cd30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>adad5fe420fd1a780092c94f24f73239e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ErrorStore *</type>
      <name>getErrors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>aad40698c55bb71246bf4646c76f1bb8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SourceDocument *</type>
      <name>getSource</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>aa1506b25b4c9c3b1a68453438123fa48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a233c20d8d31e8852227754a3008410f4</anchor>
      <arglist>(const char *msg, int line)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>parseexpr</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a7431d16632ea0e2cbde7ddf7445e3c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>msgNewSyntax</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a4f3eb47929ea4f9ef5c4397abc8f915a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>storesrc</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a651791e7e7f2bec7a11c8f341d982188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>filename</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a7efa5e9c7494c7d4586359300221aa5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ErrorStore *</type>
      <name>errors</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a967b3a864d7d94266c5bd5781c1be1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SourceDocument *</type>
      <name>source</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1ParseContext.html</anchorfile>
      <anchor>a8d3cf2f6d6aa6fdf666c757456c575b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::NedResourceCache::PendingNedType</name>
    <filename>structomnetpp_1_1nedxml_1_1NedResourceCache_1_1PendingNedType.html</filename>
    <member kind="function">
      <type></type>
      <name>PendingNedType</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NedResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>a5687a30cad2642ce71226fa726a7584f</anchor>
      <arglist>(const char *q, bool inner, ASTNode *e)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>qname</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NedResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>af9d3de1f7f9ff554ce07ad3fcfa22162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isInnerType</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NedResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>a06487fc0735f3275c43980ee03798b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ASTNode *</type>
      <name>node</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1NedResourceCache_1_1PendingNedType.html</anchorfile>
      <anchor>ad05f922dfdd047c346742335dc5d9cb5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgTypeTable::Properties</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Properties.html</filename>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Properties.html</anchorfile>
      <anchor>a0448969ede37a0f647fece4092f9d0c9</anchor>
      <arglist>(const Property &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Properties.html</anchorfile>
      <anchor>a644718bb2fb240de962dc3c9a1fdf0dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Property &gt; &amp;</type>
      <name>getAll</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Properties.html</anchorfile>
      <anchor>a6a13dafc319835b9ea0cf87e1d69a91d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Property *</type>
      <name>get</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Properties.html</anchorfile>
      <anchor>ada936a6c969fef2b16e29d6f14e4b56e</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;index=&quot;&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Properties.html</anchorfile>
      <anchor>ac59c5214b7c6b8571438609903595b8a</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;index=&quot;&quot;) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Property &gt;</type>
      <name>properties</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Properties.html</anchorfile>
      <anchor>a5bd89c8e455a13899eaaeb59bae645b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::MsgTypeTable::Property</name>
    <filename>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</filename>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a39e8f3865bb0af43640c711d5c53bc0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>ab5d19c2c5497799283affcf3098512f3</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;index, ASTNode *astNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a68e21f195ff02b584da2aab43a53fd11</anchor>
      <arglist>(const Property &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a8802382fe16a9f1966b9565e38a8495a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getIndex</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>aeb1c4ebbd815cd45d8c96c4cdb66f76d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getIndexedName</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>ad63fc236aba134bf6c62ab421fb61817</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getASTNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>adbe5dc8eddba86a9d3a712dc4f0c56f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StringVector</type>
      <name>getValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a7e4bbfa4e66b5553d6fd3078becfba44</anchor>
      <arglist>(const std::string &amp;key=&quot;&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getValueAsString</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>abc1dca3805817fd393eaaa5fb7d0b868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a9a7fe964c4c6fb0ffc9583c4d5f5866b</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ASTNode *</type>
      <name>astNode</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>ad4cf6a1a15b88dffa2bac73b544ad686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>index</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a6846e902b3e3fda10ca58fe331340c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, StringVector &gt;</type>
      <name>propertyValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1MsgTypeTable_1_1Property.html</anchorfile>
      <anchor>a2f7e19b37b421cc8b21f67b947f67b5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SAXHandler</name>
    <filename>classomnetpp_1_1nedxml_1_1SAXHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>SAXHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>ae873daa1954ae85484a02dd5b740527a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SAXHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a3884a6ee295c58f7b92b36f9ed6d0b65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a296e819984c9cbf1fbc44da31475e0e8</anchor>
      <arglist>(const char *name, const char **atts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endElement</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a5786987ced1503bd08433f5cc3ae15b4</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>characterData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a1e28bd9db67a7281dc4e4dd590ebf1aa</anchor>
      <arglist>(const char *s, int len)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processingInstruction</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>af8ea35b1e523b804ebccd5ac5b8f7c6e</anchor>
      <arglist>(const char *target, const char *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>comment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a4728ba3203606adce006057781277860</anchor>
      <arglist>(const char *data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>acb983561df1858e6fe0979026f92260b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endCdataSection</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>aea6ebe729dad53599a4c2dd650978e9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a52555325a530438e98dfd466cd11520f</anchor>
      <arglist>(SAXParser *p)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SAXParser *</type>
      <name>parser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a0951bdf8a758fb2db0e8f9c5f234ac2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>SAXParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXHandler.html</anchorfile>
      <anchor>a3cd7ce0b7fec1cd7725288547858a2e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SAXParser</name>
    <filename>classomnetpp_1_1nedxml_1_1SAXParser.html</filename>
    <member kind="function">
      <type></type>
      <name>SAXParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a015e9f05adb107778aa93aa998333eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a969970559209dc078fda4a4c4297aa9a</anchor>
      <arglist>(SAXHandler *sh)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a634b26d770aabe457469faecc4648a63</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseContent</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a0d0a3cbb7dac70308389b1b365a73927</anchor>
      <arglist>(const char *content)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentLineNumber</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a1dc570abd7ada15d40ea45dddb1aa2eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getErrorMessage</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>ae2be6b5758f827c64bae34f305485bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doParse</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a9d0710ef58a65d37aacb09c5544800fe</anchor>
      <arglist>(const char *filename, const char *content)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>errorText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a2fb61a8cfe06af0790c0ba191448d2f5</anchor>
      <arglist>[512]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SAXHandler *</type>
      <name>saxHandler</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a3f44d7f594dc234b8b44afe7439fd1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>currentParser</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SAXParser.html</anchorfile>
      <anchor>a20483103e367701aae71fc8c057c208f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::SourceDocument</name>
    <filename>classomnetpp_1_1nedxml_1_1SourceDocument.html</filename>
    <member kind="function">
      <type></type>
      <name>SourceDocument</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>a07c718d61014e3fa0c507e43ae69fddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SourceDocument</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>ac965df865c99001063ede93517d58f09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readFile</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>abcbff2d0aa350c459669eecc1df6816e</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>a5deaccc57a2c1fc00d4077c8e420a0f3</anchor>
      <arglist>(const char *data)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>a3b0b6c90b727f1ab3e43fd232e90c55c</anchor>
      <arglist>(YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>ad0313ed8ab51dd36a1947f6912a47d40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBannerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>aced24f29505187662d7dc7122f6d427c</anchor>
      <arglist>(YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getTrailingComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>a80092197bbafd96d3a071865593b66fc</anchor>
      <arglist>(YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getNextInnerComment</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>a809418ad13e8cdb45d8660cbc8d2f459</anchor>
      <arglist>(YYLoc &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>getFullTextPos</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>a5b59b422b934133c264ab2170c172627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFullText</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>a791450ab81320f4a48482b759b29c2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimSpaceAndComments</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1SourceDocument.html</anchorfile>
      <anchor>adcd5f9b0f591f600fc6da75fcfb6d7d8</anchor>
      <arglist>(YYLoc &amp;pos)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::SourceRegion</name>
    <filename>structomnetpp_1_1nedxml_1_1SourceRegion.html</filename>
    <member kind="function">
      <type></type>
      <name>SourceRegion</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1SourceRegion.html</anchorfile>
      <anchor>aadba78bee7b9d5b96dfe3cd03fa836ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>startLine</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1SourceRegion.html</anchorfile>
      <anchor>aae69f615454d4cce6fddf760c20e9eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>startColumn</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1SourceRegion.html</anchorfile>
      <anchor>a812398f271aebf690d281beac813fd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>endLine</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1SourceRegion.html</anchorfile>
      <anchor>ae558febfd4bb35f2cb24e572579516ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>endColumn</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1SourceRegion.html</anchorfile>
      <anchor>ac2d756f3d6a52f8b73f2025847c18f79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::MsgCompilerOld::TypeDesc</name>
    <filename>structomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1TypeDesc.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>msgTypeName</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1TypeDesc.html</anchorfile>
      <anchor>a8f20e96d2181010a69114bf8ed356b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>cppTypeName</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1TypeDesc.html</anchorfile>
      <anchor>a8f5d50c2704206d641d56fcc02be52ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>fromstring</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1TypeDesc.html</anchorfile>
      <anchor>a00da220992e51ddaa3f47853b97e4da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>tostring</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1TypeDesc.html</anchorfile>
      <anchor>a3f42e9438dd357ca62cdd4abfbbd47d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>emptyValue</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1MsgCompilerOld_1_1TypeDesc.html</anchorfile>
      <anchor>a2dbee707f468cd722945a7ba4bf4dd19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::UserData</name>
    <filename>classomnetpp_1_1nedxml_1_1UserData.html</filename>
    <member kind="function">
      <type></type>
      <name>UserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UserData.html</anchorfile>
      <anchor>a81d977686ec92e72c345a49f29f28dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UserData</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1UserData.html</anchorfile>
      <anchor>aaaa5baf9761b9e8f4c120b58d379ab12</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>omnetpp::nedxml::XMLGenerator</name>
    <filename>classomnetpp_1_1nedxml_1_1XMLGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>XMLGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a00668b1e264dba6367e93953e5a76fe5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XMLGenerator</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a6eccbcb7f6de3da726da7a737322249e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceLocationAttributes</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a869e3fb6355b8b2eb8d0172f0cf82070</anchor>
      <arglist>(bool srcloc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIndentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a9c6c8299ca03cc1e27e082f095dda0ca</anchor>
      <arglist>(int indentsize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>abda34c2c0c0a2603c211ac9156288e68</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *tree)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>generate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a7f2b03c99e109067120f9f4785fd53ee</anchor>
      <arglist>(ASTNode *tree)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printAttrValue</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a8198bcc6bf5e5386eba846f409568191</anchor>
      <arglist>(std::ostream &amp;out, const char *s)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doGenerate</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>ac781e49c7ec997ff74d9e2bcf7eaf769</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node, int level)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>printSrcLoc</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a150af864dd63d0e1002bdbd93def74fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>indentSize</name>
      <anchorfile>classomnetpp_1_1nedxml_1_1XMLGenerator.html</anchorfile>
      <anchor>a40b8a14baa3911c5ca691039817abbd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>omnetpp::nedxml::YYLoc</name>
    <filename>structomnetpp_1_1nedxml_1_1YYLoc.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1YYLoc.html</anchorfile>
      <anchor>a7c1d654b7b6114d7a0abc8d351dd1bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>first_line</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1YYLoc.html</anchorfile>
      <anchor>aedb9c0431c2ed49deb7d5205752ee868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>first_column</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1YYLoc.html</anchorfile>
      <anchor>a4d892cac107b2236383ef9602b96bcdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_line</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1YYLoc.html</anchorfile>
      <anchor>a7375684fb330213a07a5fe8471ecb162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_column</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1YYLoc.html</anchorfile>
      <anchor>ae154590bbba7a0f94bff8607063dc9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>text</name>
      <anchorfile>structomnetpp_1_1nedxml_1_1YYLoc.html</anchorfile>
      <anchor>a5633b1433389cec21ade3811bbe9ca5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>omnetpp</name>
    <filename>namespaceomnetpp.html</filename>
    <namespace>omnetpp::nedxml</namespace>
  </compound>
  <compound kind="namespace">
    <name>omnetpp::nedxml</name>
    <filename>namespaceomnetpp_1_1nedxml.html</filename>
    <namespace>omnetpp::nedxml::msgyyutil</namespace>
    <namespace>omnetpp::nedxml::nedyyutil</namespace>
    <class kind="class">omnetpp::nedxml::ASTBuilder</class>
    <class kind="class">omnetpp::nedxml::ASTNode</class>
    <class kind="class">omnetpp::nedxml::ASTNodeFactory</class>
    <class kind="class">omnetpp::nedxml::ASTNodeUtil</class>
    <class kind="class">omnetpp::nedxml::DtdValidationUtils</class>
    <class kind="class">omnetpp::nedxml::ErrorStore</class>
    <class kind="struct">omnetpp::nedxml::LineColumn</class>
    <class kind="class">omnetpp::nedxml::MsgAnalyzer</class>
    <class kind="class">omnetpp::nedxml::MsgCodeGenerator</class>
    <class kind="class">omnetpp::nedxml::MsgCompiler</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld</class>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOptions</class>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOptionsOld</class>
    <class kind="class">omnetpp::nedxml::MsgGenerator</class>
    <class kind="class">omnetpp::nedxml::MsgParser</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable</class>
    <class kind="class">omnetpp::nedxml::NedCrossValidator</class>
    <class kind="class">omnetpp::nedxml::NedException</class>
    <class kind="class">omnetpp::nedxml::NedGenerator</class>
    <class kind="struct">omnetpp::nedxml::NedLookupContext</class>
    <class kind="class">omnetpp::nedxml::NedParser</class>
    <class kind="class">omnetpp::nedxml::NedResourceCache</class>
    <class kind="class">omnetpp::nedxml::NedSyntaxValidator</class>
    <class kind="class">omnetpp::nedxml::NedTools</class>
    <class kind="class">omnetpp::nedxml::NedTypeInfo</class>
    <class kind="struct">omnetpp::nedxml::ParseContext</class>
    <class kind="class">omnetpp::nedxml::SAXHandler</class>
    <class kind="class">omnetpp::nedxml::SAXParser</class>
    <class kind="class">omnetpp::nedxml::SourceDocument</class>
    <class kind="struct">omnetpp::nedxml::SourceRegion</class>
    <class kind="class">omnetpp::nedxml::UserData</class>
    <class kind="class">omnetpp::nedxml::XMLGenerator</class>
    <class kind="struct">omnetpp::nedxml::YYLoc</class>
    <member kind="typedef">
      <type>ASTNode</type>
      <name>NedElement</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a750685cf0e2c3e1e53076dfbb9d5bb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ASTNode</type>
      <name>MsgElement</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a7cb87b71cb4fc45805549a03a5e02d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProblemSeverity</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEVERITY_INFO</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84ae3da86620bb8ae1659d68d01e29b4ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEVERITY_WARNING</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84a2830c97bf1f5c7b39f2bca5751c562cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEVERITY_ERROR</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0c9b22be5658dece9c144b7cf10afd84acdc9ccff92ea01240849b934330ae4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NedInternalError</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ade15b0fbad07aa2fc50d93260351ca16</anchor>
      <arglist>(const char *file, int line, ASTNode *context, const char *messagefmt,...)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateMsg</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>af1fd0b0846e0e5fa13b999121569a8f8</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNed</name>
      <anchorfile>group__NedGenerator.html</anchorfile>
      <anchor>gaca1bed4e93536ed32afc4d94d6d401e5</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API ASTNode *</type>
      <name>parseXML</name>
      <anchorfile>group__XMLParser.html</anchorfile>
      <anchor>ga89869e7ed5b3f88e4a588fc74cf56150</anchor>
      <arglist>(const char *filename, ErrorStore *errors)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>ga5391271808b777a64e21bdfc053e5678</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API std::string</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gae47d2602d0a43c074420782c970df223</anchor>
      <arglist>(ASTNode *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>msgLexerSetRecognizeNewKeywords</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>abc703543b09a58fff2499bfba7f32608</anchor>
      <arglist>(bool opt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>msgLexerSetRecognizeObsoleteKeywords</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>acf055ca779d1c4d26becb7ba3f198744</anchor>
      <arglist>(bool opt)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>slashifyFilename</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a850d36b8df17da7ecc7954c53cbd6c32</anchor>
      <arglist>(const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>currentLocation</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a39b01b66ea76c0d06475c245e815e822</anchor>
      <arglist>(ParseContext *np)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>createElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a245dc670b73aa5f2d6b485f93e08a47a</anchor>
      <arglist>(ParseContext *np, ASTNodeFactory *factory, int tagcode, ASTNode *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getOrCreateElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a0bdeb189aafa8167fb3f75684d13aade</anchor>
      <arglist>(ParseContext *np, ASTNodeFactory *factory, int tagcode, ASTNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a68d5538cd0cf2c4006743d8025e0137c</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storePos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a16243da0f1ffd1317e0f95bef325a262</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc firstpos, YYLoc lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapAttributes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ac1de6591b82009a93a263e22407b2b8d</anchor>
      <arglist>(ASTNode *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transferChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a74442e45f1cd02ad2a57657df699945f</anchor>
      <arglist>(ASTNode *from, ASTNode *to)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>trimQuotes</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>aefc88b47e9227a2fe7a4c1ad36d822fe</anchor>
      <arglist>(YYLoc vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>trimDoubleBraces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad6ae783245f434066812db8ba6953718</anchor>
      <arglist>(YYLoc vectorpos)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a7305739b1acbebaf990eeeedbde0bb3f</anchor>
      <arglist>(ParseContext *np, YYLoc)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a22be248d77562934acd27795fe9dd2e9</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>removeSpaces</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad51c182b46f7af5ed1fe371ca018a4a2</anchor>
      <arglist>(ParseContext *np, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a3ed89416c115554bcf88ef10f3ee5389</anchor>
      <arglist>(YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>makeYYLoc</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a429112ade61d714f5828e0526c538b18</anchor>
      <arglist>(int fl, int fc, int ll, int lc)</arglist>
    </member>
    <member kind="function">
      <type>YYLoc</type>
      <name>makeEmptyYYLoc</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a5f54677fe190615f90e4985d510174f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>pos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a5db42ac8af5c08f937049e91e174b697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LineColumn</type>
      <name>prevpos</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>ad503b230caf787844066a886e5e6ebe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>parseInProgress</name>
      <anchorfile>namespaceomnetpp_1_1nedxml.html</anchorfile>
      <anchor>a7a43dcdf8e17c34a1a48b8f463b8aa5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>omnetpp::nedxml::msgyyutil</name>
    <filename>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</filename>
    <member kind="function">
      <type>ASTNode *</type>
      <name>createMsgElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>ae8b3d6e29d5e171a5ea82b281cdc0072</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getOrCreateMsgElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>ae142ef08d203f0b5146a3890e83fc0ec</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>af41992cfd71bc47f0b1392ebe1af96ad</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>ac4e5c765230730eff18604cf849d19d5</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createPropertyValue</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a8435954270cd1b3d6f2082fe9cfc2d95</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a66821d777340e1b004e0efc557af174c</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *locId, const char *comment, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeFileComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a2809d491087c2578dcfc001277d388a7</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>af68fb73038064b3eb57392879034b250</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeRightComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>aff0924dbbc0881a8ba9de5c65bddc8b1</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeTrailingComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a0b398dd0ae2242e7851d9603039be3f1</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>acb958325fe9d6afbb329891296f6dfad</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a68322147be339cb05adea4bfbca03ac7</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc firstpos, YYLoc lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeInnerComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1msgyyutil.html</anchorfile>
      <anchor>a2f6f2b67b3745f3ce0181292497d50e8</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>omnetpp::nedxml::nedyyutil</name>
    <filename>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</filename>
    <member kind="function">
      <type>ASTNode *</type>
      <name>createNedElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a21d9c95492b45888690b163a0c422cbf</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>getOrCreateNedElementWithTag</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>af8dd91d6d69cae96399f2d7f89000087</anchor>
      <arglist>(ParseContext *np, int tagcode, ASTNode *parent)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ac9cfbe33d53e014190d3b95ec1a9f52c</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>addComponentProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a17ae3e1ca0f134d5e8919049f215f5b3</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a0d1d4df5349b040b2c10b3c469eb788b</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>storeComponentSourceCode</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a14e3f8a78679cda60f0927ca4911e6e5</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>PropertyElement *</type>
      <name>setIsNetworkProperty</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a1d9d2bf159fcdc29f2b2317c57b703eb</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a812bc7713960b803a79cb72d20a08b9b</anchor>
      <arglist>(ParseContext *np, ASTNode *node, const char *locId, const char *comment, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeFileComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>acd5b153ae5b27e769c81b3047f09383d</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a6fc24bc235fa1faf22a83208fbac0b46</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeRightComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>aac76e15ca362e0d4a6ed48c27fcd5358</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeTrailingComment</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ab4014a0d0b47d01fa0a13ca140ecc219</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc tokenpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ab5f8b1f6226abf60deec034206ab1e22</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeBannerAndRightComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ab10556cc298d79d45688245a3cafcc71</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc firstpos, YYLoc lastpos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>storeInnerComments</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ac949f49b798c521ed4847897b43a2a63</anchor>
      <arglist>(ParseContext *np, ASTNode *node, YYLoc pos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>ae4125b516b238057f492a0a81b19c568</anchor>
      <arglist>(ParseContext *np, ASTNode *params, YYLoc namepos)</arglist>
    </member>
    <member kind="function">
      <type>ParamElement *</type>
      <name>addParameter</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a68c99c4c5aeb9df84672c53aca3dd5a3</anchor>
      <arglist>(ParseContext *np, ASTNode *params, const char *name, YYLoc namepos)</arglist>
    </member>
    <member kind="function">
      <type>GateElement *</type>
      <name>addGate</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a6f0e3d277e56827fb270af154a03de07</anchor>
      <arglist>(ParseContext *np, ASTNode *gates, YYLoc namepos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapExpressionChildren</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a300459398f519b7f24ca6c6629ffa7ed</anchor>
      <arglist>(ASTNode *node, const char *attr1, const char *attr2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapConnection</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>aa980678106176734a257fed994038cbd</anchor>
      <arglist>(ASTNode *conn)</arglist>
    </member>
    <member kind="function">
      <type>ExpressionElement *</type>
      <name>createExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a19cd06174f3a2d5a5b23876b38d2db9f</anchor>
      <arglist>(ParseContext *np, ASTNode *expr)</arglist>
    </member>
    <member kind="function">
      <type>OperatorElement *</type>
      <name>createOperator</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>acfe1f29355626a6828fab837073ec0f9</anchor>
      <arglist>(ParseContext *np, const char *op, ASTNode *operand1, ASTNode *operand2=nullptr, ASTNode *operand3=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>FunctionElement *</type>
      <name>createFunction</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a36f3bedcd8cc44aca04fdbeb2bf4e95d</anchor>
      <arglist>(ParseContext *np, const char *funcname, ASTNode *arg1=nullptr, ASTNode *arg2=nullptr, ASTNode *arg3=nullptr, ASTNode *arg4=nullptr, ASTNode *arg5=nullptr, ASTNode *arg6=nullptr, ASTNode *arg7=nullptr, ASTNode *arg8=nullptr, ASTNode *arg9=nullptr, ASTNode *arg10=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>af462ab9b3199aef9de3ab6268c26514d</anchor>
      <arglist>(ParseContext *np, YYLoc parampos)</arglist>
    </member>
    <member kind="function">
      <type>IdentElement *</type>
      <name>createIdent</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a861f9d277f6240792be1c40a7174dc9a</anchor>
      <arglist>(ParseContext *np, YYLoc parampos, YYLoc modulepos, ASTNode *moduleindexoperand=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createPropertyValue</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a67087557d1f663c056b1c638dd3ec289</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a8424b5f820defd3143cbd52617ce04cb</anchor>
      <arglist>(ParseContext *np, int type, YYLoc valuepos, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a1598880f748d6b3139bd8283089f80ca</anchor>
      <arglist>(ParseContext *np, int type, const char *value, const char *text)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createStringLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a2f5cf3efd9089c094dc26749754012b5</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>LiteralElement *</type>
      <name>createQuantityLiteral</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>af1ea3fa2c085cea55a1a76ddb9e9b9b6</anchor>
      <arglist>(ParseContext *np, YYLoc textpos)</arglist>
    </member>
    <member kind="function">
      <type>ASTNode *</type>
      <name>prependMinusSign</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a850ea558e407ef51278a689b541853a3</anchor>
      <arglist>(ParseContext *np, ASTNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOptionalExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a7406f679a10583c8d06efa478eb498c3</anchor>
      <arglist>(ParseContext *np, ASTNode *elem, const char *attrname, YYLoc exprpos, ASTNode *expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExpression</name>
      <anchorfile>namespaceomnetpp_1_1nedxml_1_1nedyyutil.html</anchorfile>
      <anchor>a40c7106beb43bd05e29d2d2ef87e6854</anchor>
      <arglist>(ParseContext *np, ASTNode *elem, const char *attrname, YYLoc exprpos, ASTNode *expr)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Overview</name>
    <title>Overview</title>
    <filename>group__Overview.html</filename>
  </compound>
  <compound kind="group">
    <name>Example</name>
    <title>Example</title>
    <filename>group__Example.html</filename>
  </compound>
  <compound kind="group">
    <name>DTD</name>
    <title>DTD</title>
    <filename>group__DTD.html</filename>
  </compound>
  <compound kind="group">
    <name>Data</name>
    <title>Data classes</title>
    <filename>group__Data.html</filename>
    <class kind="class">omnetpp::nedxml::UserData</class>
    <class kind="struct">omnetpp::nedxml::SourceRegion</class>
    <class kind="class">omnetpp::nedxml::ASTNode</class>
    <class kind="class">omnetpp::nedxml::ASTNodeFactory</class>
  </compound>
  <compound kind="group">
    <name>NedParser</name>
    <title>NED Parsing</title>
    <filename>group__NedParser.html</filename>
    <class kind="class">omnetpp::nedxml::SourceDocument</class>
  </compound>
  <compound kind="group">
    <name>XMLParser</name>
    <title>XML Parsing</title>
    <filename>group__XMLParser.html</filename>
    <class kind="class">omnetpp::nedxml::ASTBuilder</class>
    <class kind="class">omnetpp::nedxml::SAXHandler</class>
    <class kind="class">omnetpp::nedxml::SAXParser</class>
    <member kind="function">
      <type>NEDXML_API ASTNode *</type>
      <name>parseXML</name>
      <anchorfile>group__XMLParser.html</anchorfile>
      <anchor>ga89869e7ed5b3f88e4a588fc74cf56150</anchor>
      <arglist>(const char *filename, ErrorStore *errors)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>XMLGenerator</name>
    <title>Generating XML</title>
    <filename>group__XMLGenerator.html</filename>
    <class kind="class">omnetpp::nedxml::XMLGenerator</class>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>ga5391271808b777a64e21bdfc053e5678</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
    <member kind="function">
      <type>NEDXML_API std::string</type>
      <name>generateXML</name>
      <anchorfile>group__XMLGenerator.html</anchorfile>
      <anchor>gae47d2602d0a43c074420782c970df223</anchor>
      <arglist>(ASTNode *tree, bool srcloc, int indentsize=4)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Validation</name>
    <title>Validation</title>
    <filename>group__Validation.html</filename>
    <class kind="class">omnetpp::nedxml::DtdValidationUtils</class>
    <class kind="class">omnetpp::nedxml::NedCrossValidator</class>
    <class kind="class">omnetpp::nedxml::NedSyntaxValidator</class>
    <class kind="class">omnetpp::nedxml::NedTools</class>
  </compound>
  <compound kind="group">
    <name>NedResources</name>
    <title>NED Resources</title>
    <filename>group__NedResources.html</filename>
    <class kind="struct">omnetpp::nedxml::NedLookupContext</class>
    <class kind="class">omnetpp::nedxml::NedResourceCache</class>
    <class kind="class">omnetpp::nedxml::NedTypeInfo</class>
  </compound>
  <compound kind="group">
    <name>NedGenerator</name>
    <title>Generating NED</title>
    <filename>group__NedGenerator.html</filename>
    <class kind="class">omnetpp::nedxml::NedGenerator</class>
    <member kind="function">
      <type>NEDXML_API void</type>
      <name>generateNed</name>
      <anchorfile>group__NedGenerator.html</anchorfile>
      <anchor>gaca1bed4e93536ed32afc4d94d6d401e5</anchor>
      <arglist>(std::ostream &amp;out, ASTNode *node)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CppGenerator</name>
    <title>Generating C++ code</title>
    <filename>group__CppGenerator.html</filename>
    <class kind="class">omnetpp::nedxml::MsgAnalyzer</class>
    <class kind="class">omnetpp::nedxml::MsgCodeGenerator</class>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOptions</class>
    <class kind="class">omnetpp::nedxml::MsgCompiler</class>
    <class kind="struct">omnetpp::nedxml::MsgCompilerOptionsOld</class>
    <class kind="class">omnetpp::nedxml::MsgCompilerOld</class>
    <class kind="class">omnetpp::nedxml::MsgTypeTable</class>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>OMNeT++ NEDXML API Reference</title>
    <filename>index</filename>
  </compound>
</tagfile>
