2020-01-06  ------ omnetpp-5.6 released ------

2019-10-22  Andras Varga

	* NED feature: allow reconnecting already connected gates by specifying
	the @reconnect property in the connection.

2019-05-15  ------ omnetpp-5.5 released ------

2019-03-18  Andras Varga

	* netbuilder: removed unused members
	* Code uses nedsupport::LoopVar instead

2018-06-25  ------ omnetpp-5.4.1 released ------

2018-06-11  ------ omnetpp-5.4 released ------

2018-06-04  Andras Varga

	ChangeLogs tagged for 5.3

	Better late than never.

2018-05-23  Andras Varga

	ned, sim: added "exists" operator

	exists(<submodulename>)

2018-05-18  Andras Varga

	sim: implement "typename" in submodule "if" and other expressions

	Note: typename is not allowed in a submodule VECTOR's condition, because
	type is elementwise, and we want the condition to apply to the vector as
	a whole (we don't want to allow "holes" in the submodule vector)

2018-05-18  Andras Varga

	sim: cNedNetworkBuilder: fix: allow empty typename value to be used

	Before, empty string meant "no value specified here", and search went on.

2018-05-17  Andras Varga

	sim: cNedNetworkBuilder: use cDynamicExpression not cParImpl for
	build-time expression evaluation

2018-05-18  Andras Varga

	sim: renamed namespace NedSupport to all-lowercase

----------- lines above this marker have been added from git log -----------

2018-04-11  ------ omnetpp-5.3 released ------

2017-11-26  Andras Varga

	* Follow renames in the nedxml library: NEDElement -> ASTNode,
	NED->Ned in class/function names, etc.

2017-12-12  Andras Varga

	* Follow cPar longValue()->intValue() method rename.

2017-12-12  Andras Varga

	* Follow cPar change: cPar now uses intpar_t (alias of int64_t) to
	represent integers.

2017-12-08  ------ omnetpp-5.2.1 released ------

2017-09-18  ------ omnetpp-5.2 released ------

2017-04-06  Andras Varga

	* Modernizing: use C++11's range-based for loops where applicable, using
	clang-tidy's modernize-loop-convert.

	* Modernizing: replace INT64_PRINTF_FORMAT and LL with C++11's PRId64.
	Note: PRId64 includes the "d" that was not part of INT64_PRINTF_FORMAT
	alias LL.

2017-05-08  ------ omnetpp-5.1.1 released ------

2017-03-31  ------ omnetpp-5.1 released ------

2017-02-06  ------ omnetpp-5.1pre3 released ------

2016-12-23  ------ omnetpp-5.1pre2 released ------

2016-11-08  Andras Varga

	* Fixed NED_parampattern_5.test

2016-08-23  Andras Varga

	* Follow cComponentType change: added getNedSource() to subclasses

2016-08-23  Andras Varga

	* Follow changes: detailedInfo() removed, info() renamed to str()

2016-04-13  ------ omnetpp-5.0 released ------

2016-04-01  Andras Varga

	* Edited comments to improve the generated C++ documentation (doxygen)

2016-03-10  ------ omnetpp-5.0rc released ------

2015-12-07  ------ omnetpp-5.0b3 released ------

2015-10-16  Andras Varga

	* omnetpp namespace made permanent (cannot be turned off):
	- removed configure option and preprocessor symbol USE_NAMESPACE
	- removed related macros: NAMESPACE_BEGIN, NAMESPACE_END,
	  USING_NAMESPACE, OPP, OPP_STR, OPP_PREFIX etc.

2015-07-20  ------ omnetpp-5.0b2 released ------

2015-06-16  Andras Varga

	* Cleanup: prefer ++it to it++ (less copying)

2015-06-12  Andras Varga

	* Adapted to simkernel iterator API changes (added operator* and
	operator->, deprecated operator())

2015-06-08  Andras Varga

	* Cleanup: code formatting

2015-05-22  Andras Varga

	* Modernizing: added the 'override' keyword (C++11) to overridden methods;
	it becomes blank when using with an older compiler.

2015-05-21  Rudolf Hornig

	* Modernizing: replaced NULLs by 'nullptr' (C++11); it is defined as 0
	when using an older compiler.

2015-04-20  Andras Varga

	* Cleanup: use C++ names of C headers (e.g. <cstdio> instead of <stdio.h>)

2015-04-12  Andras Varga

	* Cleanup: copyright years updated

2015-04-08  Andras Varga

	* Modernizing:

	- Use a fixed include path (-Iinclude -Isrc) for all source folders
	  under src/, and qualify cross-folder #includes with the folder
	  name (e.g. change #include "stringutil.h" to #include "common/stringutil.h").
	  This increases readbility and reduces the chance of including a wrong
	  header.

	- In source files, sort #include statements by folder.

2015-03-04  ------ omnetpp-5.0b1 released ------

2014-11-27  ------ omnetpp-4.6 released ------

2014-06-30  ------ omnetpp-4.5 released ------

2014-02-03  Andras Varga

	* Follow the removal of cCompoundModule from the simulation library.
	From now on, compound modules are instantiated with cModule.

2014-02-13  ------ omnetpp-4.4.1 released ------

2013-12-20  ------ omnetpp-4.4 released ------

2013-09-12  ------ omnetpp-4.3.1 released ------

2013-04-02  ------ omnetpp-4.3 released ------

2013-02-08  ------ omnetpp-4.3rc1 released ------

2012-01-14  Andras Varga

	* added named connections support (both explicit connection name, and
	@defaultname channel type property; see the manual for details)

2012-03-13  ------ omnetpp-4.2.2 released ------

2012-01-17  ------ omnetpp-4.2.1 released ------

2011-10-28  ------ omnetpp-4.2 released ------

2011-09-11  ------ omnetpp-4.2rc1 released ------

2011-05-05  ------ omnetpp-4.2b2 released ------

2011-04-20  Andras Varga

	* "type-name" per-object config option has been renamed to "typename",
	for consistency with NED. (It is now an exception to the rule that
	all per-object options have a hyphen in their names.)

2011-04-19  Andras Varga

	* implemented "typename" patterns, a way of assigning type to
	parametric submodule types without using parameters. The syntax
	is like deep parameter assignments, where the last component of
	the pattern is ".typename". Rules are the same as with deep param
	assignments: the innermost matching pattern with a non-default
	value will be effective; and default value can be overridden,
	i.e. the outermost pattern with a default(...) value will be the
	actual default (that becomes effective when the inifile does not
	specify a value via **.type-name). "typename" is not accepted in the
	body of the parametric submodule itself, because the value expression
	would have to be evaluated in the context of a submodule that
	does not exist yet.

	Example:
	  network Net {
	      parameters:
	          server.tcp.typename = "TCP_NSC";
	          host*.tcp.typename = default("TCP_lwIP");
	      submodule:
	          server: StandardHost {...}
	          ...
	  }

2011-04-08  Andras Varga

	* implemented conditional submodules, see nedxml/ChangeLog for details

2011-02-23  ------ omnetpp-4.2b1 released ------

2010-02-17  Andras Varga

	* fix: deep parameter assignments containing parameter references
	or the "index" operator were evaluated in the wrong context (in the
	context of the module whose parameter was assigned, instead of the
	context where the expression occurred in the code).

2010-06-11  ------ omnetpp-4.1 released ------

2010-05-31  ------ omnetpp-4.1rc2 released ------

2010-04-20  ------ omnetpp-4.1b4 released ------

2010-04-19  Andras Varga

	* implemented submodule @dynamic property: submodules declared dynamic
	(with @dynamic() or @dynamic(true)) will not be instantiated
	automatically, it is expected that they will be created at runtime
	by other modules. However, they can still be graphically edited in the
	IDE, and the ini file editor can provide content assist for setting
	their parameters.

2010-03-14  ------ omnetpp-4.1b3 released ------

2009-01-27 Andras Varga

	* fix: when subclassing from a compound module, parameter assignments
	in the super type's "submodules" block did not take effect

2009-xx-xx Andras Varga

	* INCOMPATIBLE NED SEMANTICS CHANGE 4.0:
	    fixed parameter values CANNOT be overwritten from subclasses or submodule sections
	         (this is for consistency with pattern assignments)

2009-03-12  ------ omnetpp-4.0 released ------

2009-02-27  ------ omnetpp-4.0rc2 released ------

2008-12-12  ------ omnetpp-4.0rc1 released ------

	* Netbuilder was basically reimplemented for OMNeT++ 4.0.

2006-10-21  ------ omnetpp-3.3 released ------

2006-01-12  ------ omnetpp-3.2p1 released ------

2005-10-19  ------ omnetpp-3.2 released ------

2005-09-12  Andras Varga

	* fix in loadnedfile.cc [reported by Johnny Lai]

2005-08-08  Andras Varga

	* cnednetworkbuilder.cc: assign submodule parameters, gatesizes etc
	in that submodule's context (use cContextSwitcher); same for network.
	This is mainly needed for ModNameParamResolver to work correctly
	($MODULE_NAME etc for XPath expressions are taken from the module
	in context).

2005-08-07  Andras Varga

	* cnednetworkbuilder.cc: don't look for module type if module vector
	size is zero

2005-07-26  Andras Varga

	* cnednetworkbuilder.cc: didn't check gate directions on connecting

2005-04-08  Andras Varga

	* cnednetworkbuilder.cc: background display strings were not set
	properly

2005-03-31  ------ omnetpp-3.1 released ------

2005-03-19  Andras Varga

	* cnednetworkbuilder.cc: didn't handle connection display strings

2005-01-06  Andras Varga

	* cnednetworkbuilder.cc/.h: implemented "connections nocheck"

2004-12-29  ------ omnetpp-3.0 released ------

2004-12-10  Andras Varga

	* cnednetworkbuilder.cc/.h: several fixes in expression evaluation code

2004-11-23  ------ omnetpp-3.0b1 released ------

2004-11-03  ------ omnetpp-3.0a9 released ------

2004-10-04  ------ omnetpp-3.0a8 released ------

2004-09-24  ------ omnetpp-3.0a7 released ------

2004-07-22  ------ omnetpp-3.0a6 released ------

2004-06-24

	* loadned.cc: added support for "xml" NED parameter type

2004-06-07  ------ omnetpp-3.0a5 released ------

2004-05-15  ------ omnetpp-3.0a4 released ------

2004-03-22  ------ omnetpp-3.0a3 released ------

2004-03-03  ------ omnetpp-3.0a2 released ------

2004-02-10  Andras Varga

	* cnednetworkbuilder.cc: support for multiple conditional gatesizes and
	parameters sections; fixes in expr handling

2004-02-09  Andras Varga

	* loading of simple module interfaces from NED files made possible

	* fixed bug in "sizeof" handling

2004-02-04  ------ omnetpp-3.0pre1 released ------

2003-11-09  Andras Varga

	* initial checkin of dynamic network building code.
